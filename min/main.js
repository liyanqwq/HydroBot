(()=>{var __webpack_modules__={7547:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.endOfToday=void 0;const a=o(n(2470));t.endOfToday=function(){return a.default().utc().add(8,"hours").endOf("day").subtract(8,"hours").toDate()}},2519:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.text2png=void 0;const a=new(o(n(4768)).default);t.text2png=async function(e,t){const n=`<pre style="font-family:'Source Code Pro', Consolas, 'Microsoft Yahei', HYShuaiXianTiW;font-size:14px;max-width:630px">${a.ansi_to_html(t)}</pre>`;let o,i;try{await e.setViewport({height:100,width:30}),await e.setContent(n);const t=await e.$("pre"),a=await e.evaluate((()=>{const e=document.getElementsByTagName("pre")[0];return{width:e.scrollWidth,height:e.scrollHeight}})),i=await t.boundingBox();await e.setViewport({width:Math.ceil(a.width+14),height:Math.ceil(i.height+14)}),o=await e.screenshot({type:"jpeg"})}catch(e){i=e}if(i)throw i;return(o||Buffer.from("")).toString("base64")}},9137:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.registerItem=t.Items=void 0,t.Items={fallback:{id:"fallback",weight:0,name:"未知物品",description:"未知物品"}},t.registerItem=function(e,n,o,a){t.Items[e]={id:e,weight:n,name:o,description:a}}},7286:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(3129);t.default=async function(e){let t;try{t=await new Promise(((t,n)=>{o.exec(e,((e,o,a)=>{e&&n(e),t(o+a)}))}))}catch(e){return e.toString()}return t.trim().length?t:"(execute success)"}},9063:function(module,__unused_webpack_exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&__createBinding(t,e,n);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};const path_1=__importDefault(__webpack_require__(5622)),koishi_core_1=__webpack_require__(8664),koishi_utils_1=__webpack_require__(280),fs_extra_1=__importDefault(__webpack_require__(4298)),KoishiPluginMongo=__importStar(__webpack_require__(9585));__webpack_require__(8573),__webpack_require__(9711),__webpack_require__(451),process.on("unhandledRejection",((e,t)=>{console.log("Unhandled Rejection:",t)})),Error.stackTraceLimit=50,koishi_utils_1.Logger.showDiff=!1,koishi_utils_1.Logger.showTime="MM-dd hh:mm:ss",koishi_core_1.Command.defaultConfig.checkArgCount=!0,koishi_core_1.template.set("internal",{"low-authority":"权限不足（）","usage-exhausted":"诶呀，你今天调用次数已经达到上限了哦）","too-frequent":"你打字的速度太快啦！","insufficient-arguments":"诶 是不是少了什么参数呢？使用“>help 指令名”可以查看用法哦","redunant-arguments":"存在多余参数，使用“>help 指令名”可以查看用法哦","invalid-argument":"参数 {0} 错了哦，{1}","unknown-option":"存在未知选项 {0}，使用“>help 指令名”可以查看用法哦","invalid-option":"选项 {0} 错了哦，{1}","check-syntax":"使用“>help 指令名”可以查看用法哦","invalid-number":"请提供一个数字。","invalid-integer":"请提供一个整数。","invalid-posint":"请提供一个正整数。","invalid-date":"请输入合法的时间。","invalid-user":"请指定正确的用户。","invalid-channel":"请指定正确的频道。",suggestion:"您要找的是不是{0}呢（？","command-suggestion-prefix":"","command-suggestion-suffix":"发送小数点或句号以使用推测的指令。","help-suggestion-prefix":"指令没有找到耶（）","help-suggestion-suffix":"发送小数点或句号以使用推测的指令。","subcommand-prolog":"可用的子指令有{0}：","global-help-prolog":"当前可用的指令有{0}：","global-help-epilog":"输入“>help 指令名”查看特定指令的语法和使用示例。","available-options":"可用的选项有：","available-options-with-authority":"可用的选项有（括号内为额外要求的权限等级）：","option-not-usage":"（不计入总次数）","hint-authority":"括号内为对应的最低权限等级","hint-subcommand":"标有星号的表示含有子指令","command-aliases":"别名：{0}。","command-examples":"使用示例：","command-authority":"最低权限：{0} 级。","command-max-usage":"已调用次数：{0}/{1}。","command-min-interval":"距离下次调用还需：{0}/{1} 秒。"}),String.prototype.decode=function(){return this.replace(/&#91;/gm,"[").replace(/&#93;/gm,"]").replace(/&amp;/gm,"&")},String.prototype.encode=function(){return this.replace(/&/gm,"&amp;").replace(/\[/gm,"&#91;").replace(/\]/gm,"&#93;")},koishi_core_1.Session.prototype.executeSilent=function(e,t){return this._silent=!0,this.send=koishi_utils_1.noop,this.sendQueued=koishi_utils_1.noop,this.execute(e,t)};class Main{constructor(e){this.logger=new koishi_utils_1.Logger("main"),this.config=e.config,global.proxy=e.config.proxy,this.app=new koishi_core_1.App({port:this.config.port,bots:this.config.bots,type:this.config.type,onebot:this.config.onebot,telegram:this.config.telegram,discord:this.config.discord,prefix:this.config.prompt,autoAuthorize:1,autoAssign:!0,minSimilarity:.7}),this.run()}async run(){fs_extra_1.default.ensureDirSync(path_1.default.resolve(__dirname,"..",".cache")),this.app.plugin(KoishiPluginMongo,this.config.db),this.app.on("connect",(async()=>{for(const e of this.config.admin){const t=e.split("&");let n;for(const e of t){const[t,o]=e.split(":");await this.app.database.getUser(t,o)&&(n=[t,o])}const o=Object.assign({},...t.map((e=>e.split(":"))).map((e=>({[e[0]]:e[1]}))));n&&this.app.database.setUser(n[0],n[1],{...o,authority:5,sudoer:!0}),this.logger.info(`Opped ${e}`)}this.app.command("help").shortcut("帮助",{fuzzy:!0,prefix:!0}),this.app.command("help")._aliases=[]})),await this.load(),await this.app.start()}async load(){for(const plugin of this.config.enabledplugins)try{if("string"==typeof plugin)if(plugin.startsWith("~")){let e=__webpack_require__(5305)(`./${plugin.split("~")[1]}`);e.name||(e.apply?e.name=plugin.split("~")[1]:e={name:plugin.split("~")[1],apply:e}),this.app.plugin(e)}else this.app.plugin(eval("require")(plugin).apply);else if(plugin instanceof Array)if(plugin[0].startsWith("~")){let e=__webpack_require__(5305)(`./${plugin[0].split("~")[1]}`);e.name||(e.apply?e.name=plugin[0].split("~")[1]:e={name:plugin[0].split("~")[1],apply:e}),this.app.plugin(e,plugin[1])}else this.app.plugin(eval("require")(plugin[0]),plugin[1])}catch(e){this.logger.error("Failed to load ",plugin,e)}}}global.Main=Main,module.exports=Main},5138:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=n(5747),i=o(n(1138)),r=o(n(4515)),s=n(5622),c=n(1765),u=o(n(9297)),l=o(n(9747)),d=n(4298),p=n(8664),f=s.resolve(c.cwd(),"assets"),m=(e,t)=>t?s.join(f,e[0]+t+e[1]):e[0]?s.join(f,e[0]):f;a.existsSync(m``)||d.mkdirpSync(m``);const g=s.resolve(c.cwd(),".tmp"),h=e=>e[0]?s.join(g,e[0]):g,_=new p.Logger("arcaea");function y(){if(a.existsSync(m`arc.xapk`)){_.info("Unpacking arc.xapk");new i.default(m`arc.xapk`).extractEntryTo("arcassets.apk",m``,!1,!0),d.rename(m`arcassets.apk`,m`arc.apk`),a.unlinkSync(m`arc.xapk`)}if(a.existsSync(m`arc.apk`)){_.info("Unpacking arc.apk");new i.default(m`arc.apk`).extractAllTo(h`arc`),d.copySync(h`arc/assets`,m`arcaea`,{dereference:!0,overwrite:!0}),d.removeSync(h`arc`),d.removeSync(m`arc.apk`)}d.copySync(m`_/arcaea/`,m`arcaea/_`,{dereference:!0,overwrite:!0}),global.gc&&global.gc()}y();const b=`file://${m`arcaea`}`.replace(/\\/g,"/"),w=`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n    display: block;\n}\nbody { line-height: 1; overflow: hidden; }\nol, ul { list-style: none; }\nblockquote, q { quotes: none; }\nblockquote:before, blockquote:after,\nq:before, q:after { content: ''; content: none; }\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n@font-face {\n    font-family: "Kazesawa";\n    src: url(${b}/Fonts/Kazesawa-Regular.ttf)\n}\n@font-face {\n  font-family: "Kazesawa";\n  src: url(${b}/Fonts/Kazesawa-Light.ttf);\n  font-style: light;\n}\n@font-face {\n    font-family: "Exo";\n    src: url(${b}/Fonts/Exo-Regular.ttf)\n}\n@font-face {\n  font-family: "Exo";\n  src: url(${b}/Fonts/Exo-Light.ttf);\n  font-style: light;\n}`;t.apply=function(e,t){t.endpoint.endsWith("/")||(t.endpoint+="/");const n=e=>{const t=e.toString().split(".");return 1===t.length&&(t[1]="00"),t};function o(e,t){return`${e}`.length>=t?e:o(`0${e}`,t)}const i=e=>{const t=o(e,8).toString();return[t.substring(0,2),t.substring(2,5),t.substring(5,8)].join("'")},s=e=>-.01===e?"off":e>=12.5?6:e>=12?5:e>=11?4:e>=10?3:e>=7?2:e>=3?1:0;function c(e){const t=["#0A82BE","#648C3C","#501948","#822328"],o=`${w}\n#app {\n    --app-width: 2500px;\n    --app-height: 1400px;\n    --card-height: 205px;\n    --card-width: 328px;\n    height: var(--app-height);\n    width: var(--app-width);\n    overflow: hidden;\n    font-family: Kazesawa;\n    --text: #ecf0f1;\n    background-position: center;\n    background-size: cover;\n    position: relative;\n}\n#b30 {\n    display: flex;\n    flex-wrap: wrap;\n    width: calc(0.8 * var(--app-width));\n}\n.b30-item {\n    width: var(--card-width);\n    height: var(--card-height);\n    margin: 13px;\n    position: relative;\n    box-shadow: 5px 5px 9px 0px #000000b0;\n    overflow: hidden;\n}\n.b30-item-img {\n    height: 100%;\n    width: 100%;\n    background-position: center;\n    background-size: cover;\n    filter: blur(4px) brightness(50%);\n    overflow: hidden;\n    transform: scale(1.03);\n    background-color: black;\n}\n.b30-item main {\n    top: 0;\n    position: absolute;\n    padding: 1rem;\n    margin-top: 5px;\n    color: var(--text)\n}\n.b30-item main h1 {\n    font-size: 2.5rem;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    width: calc(var(--card-width) - 2rem);\n    height: 3rem;\n}\n.difficulty-bar {\n    right: 0;\n    position: absolute;\n    top: 0;\n    border-color: transparent var(--color);\n    border-width: 0 50px 50px 0;\n    border-style: solid;\n}\n#info {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n}\n.b30-item-score {\n    font-size: 2.5rem;\n    font-family: Exo;\n    margin-top: 0.2rem;\n    font-weight: bold;\n}\n#info-bg {\n    transform-origin: right bottom;\n    transform: scale(0.7) translateY(300px);\n}\n#info-white-bg {\n    transform: translateX(300px) translateY(-20px);\n}\n#info *:not([data-skip-absolute]) {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    z-index: 2;\n}\n#info #username {\n    color: white;\n    transform: translateX(-50px) translateY(-37px);\n    font-size: 3em;\n    text-shadow: 2px 2px 6px black;\n    text-align: left;\n    width: 400px;\n}\n#info-b30, #info-r10 {\n    text-align: right;\n    font-size: 2em;\n    color: white;\n    width: 1000px;\n    font-family: "Exo";\n}\n#info-r10 {\n    transform: translateX(-10px) translateY(-110px);\n}\n#info-b30 {\n    transform: translateX(-10px) translateY(-150px);\n}\n#ptt {\n    z-index: 11 !important;\n    color: white;\n    font-family: "Exo";\n    text-shadow: 1px 1px black;\n    font-size: 50px;\n    text-align: center;\n}\n#ptt a:nth-child(2) {\n    font-size: 40px;\n}\n#ptt-container {\n    transform: translateX(-410px) translateY(-36px);\n    width: 200px;\n    z-index: 10 !important;\n}\n#character {\n    right: -500px !important;\n    z-index: 1 !important;\n}\nmain h3 {\n    margin-top:1rem; font-size: 1.5rem;\n}\nmain img {\n    transform: translateX(-450px);\n}`;return u.default.createElement("div",{id:"app",style:{backgroundImage:`url(${b}/img/world/3.jpg)`}},u.default.createElement("style",null,o),u.default.createElement("div",null," ",u.default.createElement("div",{id:"b30"},e.b30.best30_list.map((n=>{var o,a;return u.default.createElement("div",{className:"b30-item",key:n.song_id},u.default.createElement("div",{className:"b30-item-img",style:{backgroundImage:`url(${b}/songs/${n.song_id}/base.jpg), url(${b}/songs/dl_${n.song_id}/base.jpg)`}}),u.default.createElement("div",{className:"difficulty-bar",style:{"--color":t[n.difficulty]}}),u.default.createElement("main",null,u.default.createElement("h1",null,(null===(o=e.songs[n.song_id])||void 0===o?void 0:o.title_localized.en)||"???"),u.default.createElement("h2",{className:"b30-item-score"},i(n.score)),u.default.createElement("h2",{style:{fontSize:"1.5rem"}},"Potential: ",((t,n)=>{var o;return(null==e?void 0:e.songs[t])?null===(o=e.songs[t].difficulties.find((e=>e.ratingClass===n)))||void 0===o?void 0:o.ratingReal:"???"})(n.song_id,n.difficulty)," > ",(a=n.rating,Math.floor(1e3*a)/1e3)),u.default.createElement("h3",null,"P:",n.perfect_count," (+",n.shiny_perfect_count,") F:",n.near_count," L:",n.miss_count)))})))," "),u.default.createElement("div",{id:"info"},u.default.createElement("img",{id:"info-bg",src:`${b}/_/sidedialog_top.png`}),u.default.createElement("img",{id:"info-white-bg",src:`${b}/_/card_overlay.png`}),u.default.createElement("img",{id:"character",src:`${b}/char/${e.info.character}${e.info.is_char_uncapped?"u":""}.png`}),u.default.createElement("main",null,u.default.createElement("h1",{id:"username"},e.info.name),u.default.createElement("div",{id:"ptt-container"},u.default.createElement("p",{id:"ptt","data-skip-absolute":!0},-1!==e.info.rating?u.default.createElement(u.default.Fragment,null,u.default.createElement("a",{"data-skip-absolute":!0},n(e.info.rating/100)[0],"."),u.default.createElement("a",{"data-skip-absolute":!0},n(e.info.rating/100)[1])):"-")),u.default.createElement("h1",{id:"info-b30"},"Best 30 Average: ",e.b30.best30_avg),u.default.createElement("h1",{id:"info-r10"},"Recent 10 Average: ",e.b30.recent10_avg),u.default.createElement("img",{src:`${b}/img/rating_${s(e.info.rating/100)}.png`}))))}function f({info:e,song:t,highscore:n}){const o=`${w}\n#main {\n    position: absolute;\n    width: 1280px;\n    height: 720px;\n    overflow: hidden;\n}\n\nb {\n    font-size: 27px;\n    position: absolute;\n}\n\n#recent-text {\n    top: 10px;\n    left: 9px;\n    color: #895D78FF;\n}\n\n#username {\n    top: 10px;\n    color: #895D78FF;\n    right: 675px;\n}\n\n#uid-text {\n    top: 12px;\n    left: 960px;\n    color: #FFFFFFFF;\n    font-weight: 800;\n    -webkit-text-stroke: 1px #8F8F8FFF;\n}\n\n#status_bg {\n    position: absolute;\n    top: 12px;\n    left: 915px;\n}\n\n#rating {\n    position: absolute;\n    top: -43px;\n    left: 717px;\n    width: 160px;\n}\n\n#char_icon {\n    position: absolute;\n    top: -10px;\n    width: 100px;\n    left: 620px;\n}\n\n#ptt_text {\n    position: absolute;\n    top: 12px;\n    left: 754px;\n}\n\n#keep_text {\n    position: absolute;\n    top: 46px;\n    left: 750px;\n}\n\n#about {\n    position: absolute;\n    left: 43px;\n    top: 230px;\n    font-size: larger;\n    font-weight: 600;\n    color: gray;\n}\n\n#difficulty {\n    position: absolute;\n    left: 43px;\n    top: 260px;\n    font-size: larger;\n    font-weight: 600;\n    color: #618A3CFF;\n}\n\n#song {\n    position: absolute;\n    left: 39px;\n    top: 289px;\n    height: 360px;\n}\n\n#hp_base {\n    z-index: 0;\n    position: absolute;\n    left: 394px;\n    top: 289px;\n    height: 381px;\n}\n\n#hp_container {\n    z-index: 3;\n    overflow: hidden;\n    position: absolute;\n    left: 400px;\n    width: 31px;\n    bottom: 71px;\n}\n\n#hp_container img {\n    z-index: 4;\n    position: absolute;\n    left: 0px;\n    width: 31px;\n    bottom: 0px;\n    height: 360px;\n}\n\n#hp_container p {\n    z-index: 5;\n    position: absolute;\n    color: white;\n    left: 6px;\n    top: 5px;\n}\n\n#hp_overlay {\n    z-index: 99;\n    position: absolute;\n    left: 400px;\n    width: 31px;\n    top: 289px;\n    height: 360px;\n    background: repeating-linear-gradient(45deg, rgba(0, 0, 0, 0), rgba(1, 1, 1, 1), 5px,\n        );\n}\n\n#score_bg {\n    position: absolute;\n    left: 430px;\n    top: 287px;\n    z-index: 1;\n}\n\n#score {\n    position: absolute;\n    left: 510px;\n    top: 303px;\n    font-size: 60px;\n    color: white;\n    font-family: "Kazesawa";\n    z-index: 2;\n}\n\n#highscore {\n    position: absolute;\n    left: 650px;\n    top: 379px;\n    font-size: 28px;\n    font-weight: 1px;\n    color: white;\n    font-family: "Kazesawa";\n    z-index: 2;\n}\n\n#score_level {\n    position: absolute;\n    left: 555px;\n    top: 407px;\n    font-size: 60px;\n    color: white;\n    font-family: "Kazesawa";\n    z-index: 2;\n}\n\n#char {\n    position: absolute;\n    right: -450px;\n    width: 1150px;\n    bottom: -480px;\n}\n\n#title {\n    position: relative;\n    color: white;\n    top: -605px;\n    text-align: center;\n    font-size: 50px;\n}\n\n#subtitle {\n    position: relative;\n    color: white;\n    top: -600px;\n    text-align: center;\n    font-size: 30px;\n}\n\n#score_banner_text {\n    position: absolute;\n    top: 205px;\n    left: 210px;\n    font-size: 30px;\n    z-index: 1;\n}\n\n#pure {\n    position: absolute;\n    color: #3298C9FF;\n    top: 540px;\n    left: 590px;\n    font-size: x-large;\n    font-weight: 500;\n}\n\n#far {\n    position: absolute;\n    color: #686868FF;\n    top: 575px;\n    left: 606px;\n    font-size: x-large;\n    font-weight: 500;\n}\n\n#lost {\n    position: absolute;\n    color: #686868FF;\n    top: 610px;\n    left: 592px;\n    font-size: x-large;\n    font-weight: 500;\n}\n\n#purecount {\n    position: absolute;\n    top: 535px;\n    left: 700px;\n    font-size: xx-large;\n    font-weight: 500;\n    color: gray;\n    text-shadow: white 0 0 5px;\n}\n\n#farcount {\n    position: absolute;\n    top: 570px;\n    left: 700px;\n    font-size: xx-large;\n    font-weight: 500;\n    color: gray;\n    text-shadow: white 0 0 5px;\n}\n\n#lostcount {\n    position: absolute;\n    top: 605px;\n    left: 700px;\n    font-size: xx-large;\n    font-weight: 500;\n    color: gray;\n    text-shadow: white 0 0 5px;\n}\n\n#ptt p:nth-child(1) {\n    z-index: 10;\n    position: absolute;\n    top: 55px;\n    right: 580px;\n    color: white;\n    font-family: "Exo";\n    text-shadow: 1px 1px black;\n    font-size: 30px;\n    text-align: center;\n}\n\n#ptt p:nth-child(2) {\n    z-index: 10;\n    color: white;\n    position: absolute;\n    top: 63px;\n    left: 700px;\n    font-size: 20px;\n    font-family: "Exo";\n    text-shadow: 1px 1px black;\n    text-align: center;\n}\n\n#pttimage {\n    position: absolute;\n    left: 660px;\n    top: 35px;\n    width: 80px;\n}`,a=e.recent_score[0];return u.default.createElement("div",{id:"main"},u.default.createElement("style",null,o),u.default.createElement("nav",null,u.default.createElement("img",{id:"head",src:`${b}/layouts/topbar/top_bar_bg.png`,width:"1280px",height:"72px"}),u.default.createElement("b",{id:"recent-text"},"最近"),u.default.createElement("b",{id:"username"},e.name),u.default.createElement("img",{id:"status_bg",src:`${b}/layouts/topbar/status_bg.png`}),u.default.createElement("b",{id:"uid-text"},e.code),u.default.createElement("img",{id:"char_icon",src:`${b}/char/${e.character}_icon.png`}),u.default.createElement("img",{id:"pttimage",src:`${b}/img/rating_${s(e.rating/100)}.png`}),u.default.createElement(u.default.Fragment,null,u.default.createElement("img",{id:"rating",src:`${b}/layouts/results/rating_keep.png`}),u.default.createElement("img",{id:"ptt_text",src:`${b}/layouts/results/potentialtext.png`,width:"84px"}),u.default.createElement("img",{id:"keep_text",src:`${b}/layouts/results/keeptext.png`}))),u.default.createElement("img",{id:"banner",src:`${b}/layouts/results/res_banner.png`}),u.default.createElement("p",{id:"title"},t.title_localized.en),u.default.createElement("p",{id:"subtitle"},t.artist),u.default.createElement("img",{id:"score_bg",src:`${b}/layouts/results/res_scoresection${a.score>=n.score?"_high":""}.png`}),u.default.createElement("p",{id:"score"},i(a.score)),u.default.createElement("p",{id:"highscore"},i(n.score)),u.default.createElement("img",{id:"score_level",src:`${b}/img/grade_${a.score<86e5?"d":a.score<89e5?"c":a.score<92e5?"b":a.score<95e5?"a":a.score<98e5?"aa":a.score<99e5?"ex":"ex+"}.png`}),u.default.createElement("img",{id:"score_banner_text",src:`${b}/img/clear_${a.miss_count||a.near_count?a.miss_count?a.health>=70?"normal":"fail":"full":"pure"}.png`}),u.default.createElement("p",{id:"about"},"Generated by HydroBot"),u.default.createElement("p",{id:"difficulty"},["Past","Present","Future","Beyond"][a.difficulty]," ",t.difficulties[a.difficulty].rating),u.default.createElement("img",{id:"song",src:`${b}/songs/${t.id}/base.jpg`}),u.default.createElement("img",{id:"hp_base",src:`${b}/layouts/ingame/hp_base.png`}),u.default.createElement("div",{id:"hp_container",style:{height:3.6*a.health}},u.default.createElement("img",{src:`${b}/layouts/ingame/hp_bar.png`}),u.default.createElement("p",null,a.health)),u.default.createElement("div",{id:"hp_overlay"}),u.default.createElement("img",{id:"char",src:`${b}/char/${e.character}.png`}),u.default.createElement("p",{id:"pure"},"PURE"),u.default.createElement("p",{id:"purecount"},a.perfect_count),u.default.createElement("p",{id:"far"},"FAR"),u.default.createElement("p",{id:"farcount"},a.near_count),u.default.createElement("p",{id:"lost"},"LOST"),u.default.createElement("p",{id:"lostcount"},a.miss_count))}e.command("arcaea"),e.command("arcaea.b30 [id:string]","获取arcaea b30信息",{minInterval:3e4}).shortcut("a b30",{fuzzy:!0}).userFields(["arcId"]).action((async({session:n},o)=>{if(!(o=o||n.user.arcId))return"缺少用户ID。";const a=e.puppeteer.page(),i=await async function(e){const n=Array.from({length:30},((e,t)=>t+1)),o={calls:JSON.stringify([{id:0,endpoint:`user/best30?${"number"==typeof e?"usercode":"user"}=${e}`,bind:n.reduce(((e,t)=>(e[`$song_${t}`]=`best30_list[${t-1}].song_id`,e)),{})},{id:1,endpoint:`user/info?${"number"==typeof e?"usercode":"user"}=${e}`},...n.map((e=>({id:e+1,endpoint:`song/info?songname=$song_${e}`})))])},a=await r.default.get(`${t.endpoint}v4/batch`).set("User-Agent",t.useragent).query(o);if(0!==a.body.status)throw new Error(a.body.message);return a.body.content.map((e=>0===e.result.status?e.result.content:e.result.status))}(o);if(-1===i[0])return"非法的好友码。";if(-6===i[0])return"没有游玩记录。";if("number"==typeof i[0])return`查询失败。（${i[0]}）`;const s=i[1];n.user.arcId=s.user_id;const f=i[0];i.shift(),i.shift();const m={};for(const e of i)m[e.id]=e;const g=l.default.renderToString(u.default.createElement(c,{info:s,b30:f,songs:m})),_=await a;d.writeFile(h`a.html`,g),await _.setViewport({height:1400,width:2500}),await _.goto(`file://${h`a.html`}`);const y=await _.screenshot({encoding:"base64",type:"jpeg"});return _.close(),p.s.image(`base64://${y}`)})),e.command("arcaea.recent [id:string]","获取arcaea recent信息",{minInterval:3e4}).shortcut("a recent",{fuzzy:!0}).userFields(["arcId"]).action((async({session:n},o)=>{if(!(o=o||n.user.arcId))return"缺少用户ID。";const a=e.puppeteer.page(),i=await async function(e){const n={calls:JSON.stringify([{id:0,endpoint:`user/info?${"number"==typeof e?"usercode":"user"}=${e}&recent=1`,bind:{$song:"recent_score[0].song_id",$difficulty:"recent_score[0].difficulty"}},{id:1,endpoint:"song/info?songname=$song"},{id:2,endpoint:`user/best?${"number"==typeof e?"usercode":"user"}=${e}&difficulty=$difficulty&songname=$song`}])},o=await r.default.get(`${t.endpoint}v4/batch`).set("User-Agent",t.useragent).query(n);if(0!==o.body.status)throw new Error(o.body.message);return-6===o.body.content[2].result.status&&(o.body.content[2].result={status:0,content:o.body.content[0].result.content.recent_score[0]}),o.body.content.map((e=>0===e.result.status?e.result.content:e.result.status))}(o);if(-1===i[0])return"非法的好友码。";if(-6===i[0])return"没有游玩记录。";if("number"==typeof i[0])return`查询失败。（${i[0]}）`;const s=i[0];n.user.arcId=s.user_id;const c=l.default.renderToString(u.default.createElement(f,{info:s,song:i[1],highscore:i[2]})),m=await a;d.writeFile(h`b.html`,c),await m.setViewport({height:720,width:1280}),await m.goto(`file://${h`b.html`}`);const g=await m.screenshot({encoding:"base64",type:"jpeg"});return m.close(),p.s.image(`base64://${g}`)})),e.command("arcaea.update <type> <url>","更新",{authority:4}).action((async(e,t,n)=>{const o=h`update`,i=a.createWriteStream(o);return r.default.get(n).pipe(i),await new Promise(((e,t)=>{i.on("finish",(()=>{console.log("File saved"),e(null)})),i.on("error",(e=>{console.log("error in request"),t(new Error(`下载失败: ${e.message}`))}))})),await d.rename(o,m`arc.${t}`),y(),"更新资源完成。"}))}},6286:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=n(8664),i=n(3804),r=o(n(2470));a.Channel.extend((()=>({kick:0}))),t.apply=async function(e){e.select("platform","onebot").command("autokick <count>","",{hidden:!0,authority:4}).channelFields(["kick"]).action((async({session:e},t)=>(e.channel.kick=+t,`set to ${t}`))),e.app.on("connect",(()=>{const t=e.app.database.mongo.collection("autokick");e.select("platform","onebot").command("autokick.run","",{hidden:!0,authority:4}).channelFields(["kick"]).option("dry","dry run",{authority:2}).action((async({session:e,options:n})=>{const o=await e.bot.getGroup(e.groupId);let a=await e.bot.$getGroupMemberList(o.groupId);const s=(await t.find({groupId:e.groupId}).toArray()).map((e=>e.userId));if(a=i.filter(a,(e=>!s.includes(e.userId))),e.channel.kick&&e.channel.kick<a.length){let s;a=i.sortBy(a.map((e=>({...e,sort:Math.max(e.lastSentTime,e.joinTime)}))),"sort");for(const n of a){if(!await t.findOne({groupId:e.groupId,userId:n.userId})){s=n;break}}await e.send([`将 ${s.nickname||s.card} (${s.userId}) 移出群`,`（${r.default(1e3*s.joinTime||0).fromNow()}加入，上次发言 ${r.default(1e3*s.lastSentTime||0).fromNow()}）`].join("\n")),n.dry||await Promise.all([e.bot.$setGroupKick(o.groupId,s.userId),t.insertOne({groupId:e.groupId,userId:s.userId})])}}))}))}},1298:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=o(n(4515)),i={};for(let e=0;e<58;e++)i["fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF"[e]]=e;const r=[11,10,3,8,4,6],s=["B","V","1","","","4","","1","","7","",""];function c(e){if(12!==e.length||(e[0]+e[1]+e[2]+e[5]+e[7]+e[9]).toUpperCase()!==s.join(""))return null;let t=0;for(let n=0;n<6;n++)t+=i[e[r[n]]]*58**n;return t=t-8728348608^177451812,t>0&&t<1e9?t:null}const u=[[/(BV[0-9a-zA-Z]{10})/gim,e=>c(e[1])],[/av([0-9]+)/gim,e=>parseInt(e[1],10)],[/b23\.tv\/([a-zA-Z0-9]+)/gim,async e=>{const t=`https://b23.tv/${e[1]}`;return c((await new Promise((e=>{a.default.get(t).buffer(!1).end(((n,o)=>{e(o.redirects.length?o.redirects.pop():t)}))}))).split("video/")[1].split("?")[0])}]];t.apply=e=>{e.command("bilibili <avid>",{hidden:!0}).action((async({session:e},t)=>{const n=await a.default.get(`http://api.bilibili.com/x/web-interface/view?aid=${t}`);0===n.body.code&&await e.send(`bilibili.com/video/av${t}\n${n.body.data.title}\n[CQ:image,file=${n.body.data.pic}]`)})),e.middleware((async(e,t)=>{let n;await t();for(const t of u){const o=t[0].exec(e.content);if(o){const e=t[1](o);n=e instanceof Promise?await e:e;break}}n&&await e.execute(`bilibili ${n}`)}))}},2932:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;t.apply=e=>{e.on("connect",(async()=>{const t=e.database.mongo.collection("bottle");e.command("bottle.throw <content:text>","丢漂流瓶",{noRedirect:!0}).alias("丢漂流瓶").userFields(["id"]).action((async({session:e},n)=>`已丢出。(${(await t.insertOne({groupId:`${e.platform}:${e.groupId}`,userId:+e.user.id,content:n.trim(),pick:0})).insertedId})`)),e.command("bottle.pick","捡漂流瓶").alias("捡漂流瓶").action((async()=>{const e=await t.find({}).count();if(!e)return"没有捡到";const n=Math.floor(Math.random()*e),[o]=await t.find({}).skip(n).limit(1).toArray();return Math.random()>.5?await t.deleteOne({_id:o._id}):await t.updateOne({_id:o._id},{$inc:{pick:1}}),`被捡起 ${o.pick+1} 次\n时间：${new Date(1e3*o._id.generationTime).toLocaleString()}\n内容：${o.content}`})),e.command("bottle.del <query:text>",{authority:5,hidden:!0}).action((async(e,n)=>(await t.deleteMany(JSON.parse(n.decode()))).deletedCount.toString()))})),e.command("bottle","漂流瓶")}},4454:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&__createBinding(t,e,n);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.apply=void 0;const child_process_1=__importDefault(__webpack_require__(3129)),util_1=__webpack_require__(1669),koishi_core_1=__webpack_require__(8664),KoishiPluginCommon=__importStar(__webpack_require__(4393)),mongodb_1=__webpack_require__(7548),moment_1=__importDefault(__webpack_require__(2470)),graph_1=__webpack_require__(2519),shell_1=__importDefault(__webpack_require__(7286));koishi_core_1.Channel.extend((()=>({disallowedCommands:[]})));const groupMap={},userMap={};async function getGroupName(e){if("private"===e.subtype)return"私聊";const t=Date.now(),n=e.channelId;if(!groupMap[n]||t-groupMap[n][1]>=koishi_core_1.Time.hour){const o=e.bot.getGroup(n).then((e=>e.groupName),(()=>n));groupMap[n]=[o,t]}let o=await groupMap[n][0];return o!==`${n}`&&(o+=` (${n})`),o}async function formatMessage(e){const t=koishi_core_1.segment.parse(e.content);let n="";for(const o of t)if("string"==typeof o)n+=o;else if("text"===o.type)n+=o.data.content;else if("at"===o.type)if("all"===o.data.qq)n+="@全体成员";else{const t=o.data.qq,a=Date.now();if(!userMap[t]||a-userMap[t][1]>=koishi_core_1.Time.hour){const n=e.bot.getGroupMember(e.groupId,t).then((e=>e.nickname||e.username),(()=>t));userMap[t]=[n,a]}n+=`@${await userMap[t][0]}`}else"face"===o.type?n+=`[face ${o.data.id}]`:"image"===o.type?n+=`[image ${(o.data.url||"").split("?")[0]}]`:"reply"===o.type?n+=`[reply ${o.data.id}]`:n+=`[${o.type}]`;return n}const checkGroupAdmin=async({session:e})=>{var t,n;return e.user.authority>=4||(null===(t=e.author.roles)||void 0===t?void 0:t.includes("admin"))||(null===(n=e.author.roles)||void 0===n?void 0:n.includes("owner"))?null:"仅管理员可执行该操作。"},apply=(ctx,config={})=>{var _a,_b;const logger=new koishi_core_1.Logger("busybox");koishi_core_1.Logger.levels.message=3,koishi_core_1.Time.setTimezoneOffset(null!==(_a=config.timezoneOffset)&&void 0!==_a?_a:-480),config.recordMessage=null===(_b=config.recordMessage)||void 0===_b||_b,ctx.plugin(KoishiPluginCommon,{}),ctx.command("help",{authority:1,hidden:!0}),ctx.command("tex",{authority:1}),ctx.command("_","管理工具"),ctx.select("groupId").command("_.assign","assign",{authority:4}).channelFields(["assignee"]).action((async({session:e})=>{e.channel.assignee=e.selfId.toString()})),ctx.command("_.echo <msg:text>","echo",{noRedirect:!0,authority:3}).action(((e,t)=>t.decode())),ctx.command("_.eval <expr:text>",{authority:5,noRedirect:!0,hidden:!0}).option("i","Output as image").userFields(koishi_core_1.User.fields).channelFields(koishi_core_1.Channel.fields).action((async({session,options},input)=>{let res;const expr=`        (async function f() {\n            return ${input.decode()}\n        })()`;try{res=await eval(expr)}catch(e){res=e}const output=util_1.inspect(res,!1,3);if(!options.i)return output;const page=await ctx.app.puppeteer.page(),img=await graph_1.text2png(page,output);return page.close(),`[CQ:image,file=base64://${img}]`})),ctx.command("_.sh <command:text>","执行shell命令",{authority:5,noRedirect:!0}).option("i","Output as image").action((async({options:e},t)=>{const n=await shell_1.default(t.decode());if(!e.i)return n;const o=await ctx.app.puppeteer.page(),a=await graph_1.text2png(o,n);return o.close(),`[CQ:image,file=base64://${a}]`})),ctx.command("_.shutdown","关闭机器人",{authority:5,noRedirect:!0}).action((()=>(setTimeout((()=>{process.env.pm_id?child_process_1.default.exec(`pm2 stop ${process.env.pm_id}`):process.exit(0)}),3e3),"Exiting in 3 secs..."))),ctx.command("_.restart","重启机器人",{authority:5,noRedirect:!0}).action((()=>process.env.pm_id?(setTimeout((()=>{child_process_1.default.exec(`pm2 restart ${process.env.pm_id}`)}),3e3),"Restarting in 3 secs..."):"Cannot restart: not pm2 environment")),ctx.select("platform").command("_.leave","退出该群",{noRedirect:!0}).userFields(["authority"]).check(checkGroupAdmin).action((async({session:e})=>{await e.bot.$setGroupLeave(e.groupId)})),ctx.command("_.boardcast <message:text>","全服广播",{authority:5,noRedirect:!0}).option("forced","-f 无视 silent 标签进行广播").action((async({options:e,session:t},n)=>{if(!n)return"请输入要发送的文本。";let o=await ctx.database.getAssignedChannels(["id","flag"]);e.forced||(o=o.filter((e=>!(e.flag&koishi_core_1.Channel.Flag.silent)))),o.forEach((e=>{t.bot.sendMessage(e.id,n)}))})),ctx.command("contextify <command:text>","在特定上下文中触发指令",{authority:4,noRedirect:!0}),ctx.command("_.deactivate","在群内禁用",{noRedirect:!0}).userFields(["authority"]).check(checkGroupAdmin).channelFields(["flag"]).action((({session:e})=>(e.channel.flag|=koishi_core_1.Channel.Flag.ignore,"Deactivated"))),ctx.command("_.activate","在群内启用",{noRedirect:!0}).userFields(["authority"]).check(checkGroupAdmin).channelFields(["flag"]).action((({session:e})=>(e.channel.flag&=~koishi_core_1.Channel.Flag.ignore,"Activated"))),ctx.command("switch",{authority:1}).check(checkGroupAdmin),ctx.command("_.mute <user> <periodSecs>","禁言用户",{noRedirect:!0}).userFields(["authority"]).check(checkGroupAdmin).action((({session:e},t,n="600000")=>e.bot.$setGroupBan(e.groupId,t,parseInt(n,10)))),ctx.on("message",(async e=>{const t=await getGroupName(e),n=`${e.username}(${e.userId})`,o=await formatMessage(e);if(logger.info(`[${t}] ${n}: ${o}`),e.groupId&&">_.activate"===e.content){if((await ctx.database.getUser(e.platform,e.userId)).authority>=4||e.author.roles.includes("admin")||e.author.roles.includes("owner")){const t=(await ctx.database.getChannel(e.platform,e.groupId)).flag&~koishi_core_1.Channel.Flag.ignore;await ctx.database.setChannel(e.platform,e.groupId,{flag:t}),await e.send("Activated")}else await e.send("您没有权限执行该操作")}})),ctx.on("before-send",(e=>{Promise.all([getGroupName(e),formatMessage(e)]).then((([t,n])=>logger.info(`send [${t}] ${e.selfId}: ${n}`)))})),ctx.on("group-member/ban",(e=>{e.userId.toString()===e.selfId.toString()&&console.log(e)})),ctx.on("group-member-added",(async e=>{const t=await e.app.database.getChannel(e.platform,e.groupId);logger.info("Event.Group_Increase",e,t),t.welcomeMsg&&await e.send(t.welcomeMsg.replace(/%@/gim,`[CQ:at,qq=${e.userId}`))})),ctx.on("group-member-deleted",(async e=>{const t=await ctx.database.getUser(e.platform,e.userId);logger.info("Event.Group_Decrease",e,t),e.send(`${e.username} 退出了群聊。`)})),ctx.on("before-attach-user",((e,t)=>{t.add("id")})),ctx.app.on("friend-request",(e=>e.bot.$setFriendAddRequest(e.messageId,!0))),ctx.app.on("group-request",(async e=>{const t=await ctx.database.getUser(e.platform,e.userId),n=await ctx.database.getChannel(e.platform,e.groupId);return 5===(null==t?void 0:t.authority)?(logger.info("Approve Invite Request (Admin)",e,t),void e.bot.$setGroupAddRequest(e.messageId,e.subtype,!0)):(config.public||[]).includes(`${e.platform}:${e.selfId}`)?(null==n?void 0:n.flag)&koishi_core_1.Channel.Flag.ignore?(logger.info("Denied Invite Request (Blacklist.User)",e,n),void e.bot.$setGroupAddRequest(e.messageId,e.subtype,!1,"此群已被列入黑名单。")):(null==t?void 0:t.flag)&koishi_core_1.User.Flag.ignore?(logger.info("Denied Invite Request (Blacklist.User)",e,t),void e.bot.$setGroupAddRequest(e.messageId,e.subtype,!1,"您已被列入黑名单。")):(logger.info("Approve Invite Request",e,t,n),void e.bot.$setGroupAddRequest(e.messageId,e.subtype,!0)):(logger.info("Denied Invite Request (Not public)",e,t),void e.bot.$setGroupAddRequest(e.messageId,e.subtype,!1,"此账号不对外开放，请使用其他账号。"))})),ctx.on("connect",(async()=>{const e=ctx.database.mongo.collection("message");logger.info("Ensuring index..."),await e.createIndex({time:-1,group:1,user:1}),logger.info("Done."),ctx.command("_.recall","撤回消息").userFields(["authority"]).check(checkGroupAdmin).option("count","-c <count> 数量",{fallback:1}).action((async({session:t,options:n})=>{const o=await t.app.database.getUser(t.platform,t.selfId.toString()),a=await e.find({group:t.groupId,sender:+o.id}).sort({time:-1}).limit(n.count).toArray();logger.info("deleting message: %o",a);for(const e of a)await t.bot.deleteMessage(t.groupId,e.id)})),ctx.command("_.stat [duration]","stat").option("total","-t Total").action((async({session:t,options:n},o="1day")=>{const[,a="1",i]=/(\d+)?(\w+)/.exec(o),r=`${t.platform}:${t.groupId}`,s=await t.app.database.getUser(t.platform,t.selfId.toString()),c=n.total?{}:{time:{$gt:moment_1.default().add(-a,i).toDate()}},u=await e.find({...c,sender:+s.id}).count(),l=await e.find({...c,group:r,sender:+s.id}).count(),d=await e.find({...c,sender:{$ne:+s.id}}).count(),p=await e.find({...c,group:r,sender:{$ne:+s.id}}).count();return`统计信息${n.total?"（总计）":`（${o}）`}\n发送消息${u}条，本群${l}条。\n收到消息${d}条，本群${p}条。`})),ctx.command("_.rank [duration]","rank").option("total","Total").action((async({session:t,options:n},o="1day")=>{const[,a="1",i]=/(\d+)?(\w+)/.exec(o),r=`${t.platform}:${t.groupId}`,s=n.total?{group:r}:{time:{$gt:moment_1.default().add(-a,i).toDate()},group:r},c=await e.aggregate([{$match:s},{$group:{_id:"$sender",count:{$sum:1}}},{$sort:{count:-1}},{$limit:10}]).toArray(),u={};for(let e=0;e<c.length;e++){const n=c[e];let o=await t.database.getUser("id",n._id.toString());o||(o=await t.database.getUser("id",+n._id));try{u[n._id]=await t.bot.getGroupMember(t.groupId,o[t.platform])}catch(e){u[n._id]={username:(null==o?void 0:o.name)||n._id,nickname:""}}}return`群成员发言排行${n.total?"（共计）":`（${o}）`}\n${c.map((e=>`${u[e._id].nickname||u[e._id].username} ${e.count}条`)).join("\n")}`})),config.recordMessage&&(ctx.on("message",(async t=>{let n=await ctx.database.getUser(t.platform,t.author.userId);n||await ctx.database.createUser(t.platform,t.author.userId,{}),n=await ctx.database.getUser(t.platform,t.author.userId),n||console.log(t.author.userId);const o=`${t.platform}:${t.groupId}`;e.insertOne({_id:new mongodb_1.ObjectId,group:o,message:t.content,sender:+n.id,time:new Date,id:t.messageId})})),ctx.on("send",(async t=>{if(!t.groupId)return;const n=`${t.platform}:${t.groupId}`;let o=await t.app.database.getUser(t.platform,t.selfId.toString(),["id"]);o||await t.app.database.createUser(t.platform,t.selfId.toString(),{}),o=await t.app.database.getUser(t.platform,t.selfId.toString(),["id"]),e.insertOne({_id:new mongodb_1.ObjectId,time:new Date,sender:+o.id,group:n,message:t.content,id:t.messageId})})))}))};exports.apply=apply},8342:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=o(n(2376));t.apply=function(e){e.command("tools/calc <expr:text>","calc",{minInterval:2e3}).shortcut(/^\?([\s\S]+)$/,{args:["$1"]}).option("full","-f, --full full output").option("raw","-r, --raw raw input",{authority:5}).example("calc 1+1").example("calc Solve[x^2+1==0,{x}]").example("calc FactorInteger[233333]").action((async({session:e,options:t},n)=>{const{data:o}=await a.default.post("http://127.0.0.1:10378/",{raw:t.raw?"1":null,input:n.decode(),type:t.full?"Image":"Result"});if(!o.startsWith("<?xml"))return o;const i=await e.app.puppeteer.page();await i.setContent(o);const r=await i.$("svg"),s=await i.screenshot({clip:await r.boundingBox(),type:"jpeg"});return i.close(),`[CQ:image,file=base64://${s.toString("base64")}]`})),e.command("tools/calc.zebra <image:image>","Horse to Zebra",{minInterval:2e3})}},6134:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=o(n(4515)),i=n(3804);t.apply=function(e){e.command("oi","OI related"),e.command("oi/cf","Codeforces"),e.command("oi/cf.user <name>","Codeforces User",{minInterval:3e3}).action((async(e,t)=>{const n=await a.default.get(`https://codeforces.com/api/user.info?handles=${t}`).catch((()=>{}));if(!n)return"CF 挂了！";if("FAILED"===n.body.status)return"没这个人!";const o=n.body.result[0];return`${o.handle} ${o.firstName||""} ${o.lastName||""} ${o.organization||""}\n[CQ:image,file=${o.avatar}]\nRating: ${o.rating}\nRank: ${o.rank}\nMaxRating: ${o.maxRating}\nMaxRank: ${o.maxRank}`})),e.command("oi/cf.contest","Codeforces Contest",{minInterval:3e3}).action((async()=>{const e=await a.default.get("https://codeforces.com/api/contest.list").catch((()=>{}));if(!e||"OK"!==e.body.status)return"CF 挂了！";const t=(new Date).getTime(),n=i.filter(e.body.result,(e=>1e3*e.startTimeSeconds>t));let o="最近的比赛：\n";for(let e=n.length-1;e>=Math.max(n.length-5,0);e--){const t=n[e];o+=`${t.name} ${new Date(1e3*t.startTimeSeconds).toLocaleString()}\n`}return o}))}},1916:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=o(n(4515));t.apply=function(e){e.command("github/dress <path>","komeiji-satori/Dress").example("dress wuxianucw/001.jpg").action((async({session:e},t)=>{try{const n=await a.default.get(`https://cdn.jsdelivr.net/gh/komeiji-satori/Dress/${t}`).buffer();await e.send(`[CQ:image,file=base64://${n.body.toString("base64")}]`)}catch(e){return e.toString()}}))}},5282:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const o=n(8664),a=n(9137);function i(...e){let t=0;for(const n of e)t+=n;return t}o.User.extend((()=>({coin:0,backpack:[]}))),t.apply=function(e){e.command("property","财产系统"),e.command("property/backpack","背包").userFields(["backpack"]).action((({session:e})=>e.user.backpack.length?[`你的背包共${i(...e.user.backpack.map((e=>e.count)))}个物品。`,...e.user.backpack.map((e=>`${(a.Items[e.id]||a.Items.fallback).name} * ${e.count}`))].join("\n"):"你的背包是空的！")),e.command("property/checkin","签到",{maxUsage:1}).shortcut("签到",{prefix:!1}).userFields(["coin"]).action((async({session:e})=>{const t=20+Math.floor(10*Math.random());return e.user.coin+=t,`签到成功，获得${t}个硬币（共有${e.user.coin}个）`})),e.command("property/pay <targetUserId> <count>","转账",{noRedirect:!0}).userFields(["coin"]).action((async({session:t},n,a)=>{const i=parseInt(a,10);if(!(Number.isSafeInteger(i)&&i>0))return"不合法的数值。";if(t.user.coin<i)return"你没有足够的硬币。";if(!n)return"未指定目标。";const r=new o.Session(e,t);r.userId=n,r.author.userId=n,delete r.user;const s=await r.observeUser(["coin"]);return t.user.coin-=i,s.coin+=i,await r.user._update(),`已转账${i}个硬币。`}))}},7276:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const r=n(8664),s=i(n(9160)),c=n(280),u=n(2519);t.apply=function(e,t){e.plugin(s,t),e.on("eval/before-send",(async(t,n)=>{if(n.__sendCount=(n.__sendCount||0)+1,n.__sendCount>3)return"";if(c.segment.parse(t).filter((e=>"text"===e.type)).map((e=>e.data.content)).join("").length>512){const n=await e.puppeteer.page(),o=await u.text2png(n,t.decode());return c.s("image",{file:`base64://${o}`})}return t})),e.command("evaluate").option("i","Output as image",{hidden:!0}).userFields(r.User.fields).channelFields(r.Channel.fields).check((({session:e})=>{if(!e._sudo)return;const t=e.argv.args[0].replace("eval ","");return e.argv.options.i&&e.execute(`_.eval -i ${t}`),e.execute(`_.eval ${t}`),""})),e.command("API <name> [arg0] [arg1] [arg2] [arg3]",{authority:5}).action((async({session:e},t,...n)=>{const o=await e.bot[t](...n);return JSON.stringify(o)})),e.command("@","utils",{hidden:!0}),e.command("@.silent <command:text>",{hidden:!0}).action((({session:e},t)=>e.executeSilent(t))),e.command("@.sleep <duration> <command:text>",{hidden:!0}).action((async({session:e},t,n)=>{let o=Math.min(1e4,+t);!Number.isNaN(o)&&o||(o=0),await c.sleep(o),await e.execute(n)}))}},8394:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return a(t,e),t},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const s=r(n(6417)),c=i(n(4515)),u=r(n(3680)),l=n(280),d=n(4630);u.default(c);const p=new l.Logger("github");class f extends Error{}function m(e){return e.replace(/^```(.*)$/gm,"").replace(/^<!--(.*)-->$/gm,"").replace(/\n\s*\n/g,"\n").replace(/(\r?\n *)+/gim,"\n")}async function g(e,t,n,o){const a=await e.page();try{await a.goto(t,{waitUntil:"networkidle0"});const e=await a.$(n);let i=await e.boundingBox();await a.setViewport({height:Math.ceil(i.y+i.height+50),width:1080}),i=await e.boundingBox(),i={x:i.x-o[0],y:i.y-o[1],width:i.width+o[2],height:i.height+o[3]};const r=await a.screenshot({encoding:"base64",type:"jpeg",clip:i});return await a.close(),r}catch(e){throw await a.close(),e}}t.apply=(e,t)=>{function n(e){return c.post(e).proxy(t.proxy).set("Accept","application/vnd.github.v3+json").set("User-Agent","HydroBot")}async function o(o,a,i,r){if(o.includes("!!link"))return[i.link];const s=await r();if(o.includes("!!merge")){const e=o.split("!!merge")[1];return await(u=`https://api.github.com/repos/${i.reponame}/pulls/${i.issueId}/merge`,c.put(u).proxy(t.proxy).set("Accept","application/vnd.github.v3+json").set("User-Agent","HydroBot")).set("Authorization",`token ${s}`).send({commit_title:e.trim()}),[]}var u;if(o.includes("!!approve"))return await n(`https://api.github.com/repos/${i.reponame}/pulls/${i.issueId}/reviews`).set("Authorization",`token ${s}`).send({event:"APPROVE"}),[];if(o.includes("!!diff")){return[`[CQ:image,file=base64://${await g(e.puppeteer,`${i.link}/files`,".files-bucket",[0,0,0,0])}]`]}return await n(`https://api.github.com/repos/${i.reponame}/issues/${i.issueId}/comments`).set("Authorization",`token ${s}`).send({body:o}),[]}e.on("connect",(()=>{const n=e.database.mongo.collection("github_watch"),a=e.database.mongo.collection("github_data"),i={push:{async hook(e){const n=e.ref.split("/")[2],o=e.head_commit?e.head_commit.author.username:e.sender.login;let a=0,i=0,r=0,s=`Recent commit to ${e.repository.full_name}${"master"===n?"":`:${n}`} by ${o}`;if(t.sourcegraph)try{const n=await c.post("https://sourcegraph.com/.api/graphql").set("Authorization",`token ${t.sourcegraph}`).send({query:`query{\nrepository(name:"github.com/${e.repository.full_name}"){\n  comparison(base:"${e.before}",head:"${e.after}"){\n    fileDiffs{nodes{stat{added changed deleted}}}\n  }\n}\n}`});if(n.body.data)if(n.body.data.repository){const e=n.body.data.repository.comparison.fileDiffs.nodes;for(const t of e)a+=t.stat.added||0,i+=t.stat.deleted||0,r+=t.stat.changed||0}else p.info("Repo not found: %s",e.repository.full_name);else p.info(n.body)}catch(e){p.error(e)}if((a||i||r)&&(s+=`\n${a}+ ${i}- ${r}M`),e.commits.length<5)for(const t of e.commits){const e=[];t.added.length&&e.push(`${t.added.length}+`),t.removed.length&&e.push(`${t.removed.length}-`),t.modified.length&&e.push(`${t.modified.length}M`),s+=`\n${t.id.substr(0,6)} ${m(t.message).replace(/\n/g,"\r\n")} (${e.join(" ")})`}else{let t=e.commits[0],n=[];t.added.length&&n.push(`${t.added.length}+`),t.removed.length&&n.push(`${t.removed.length}-`),t.modified.length&&n.push(`${t.modified.length}M`),s+=`\n${t.id.substr(0,6)} ${m(t.message).replace(/\n/g,"\r\n")} (${n.join(" ")})`,s+=`\n...${e.commits.length-2} commits omitted...`,t=e.commits[e.commits.length-1],n=[],t.added.length&&n.push(`${t.added.length}+`),t.removed.length&&n.push(`${t.removed.length}-`),t.modified.length&&n.push(`${t.modified.length}M`),s+=`\n${t.id.substr(0,6)} ${m(t.message).replace(/\n/g,"\r\n")} (${n.join(" ")})`}return[s,{link:e.compare}]},async interact(t,n,o){if(t.includes("!!link"))return[o.link];if(t.includes("!!diff")){return[`[CQ:image,file=base64://${await g(e.puppeteer,o.link,".files-bucket",[0,0,0,0])}]`]}return[]}},fork:{merge:!0,hook:async e=>"created"===e.action?[`${e.sender.login} forked ${e.repository.full_name}`]:[]},issues:{merge:e=>`${e.repository.full_name}/${e.issue.number}`,async hook(t){var n;let o;if("opened"===t.action||"edited"===t.action){o=`${t.sender.login} ${t.action} issue ${t.repository.full_name}#${t.issue.number}`;try{const n=await g(e.puppeteer,t.issue.html_url,".js-discussion",[68,130,92,130]);o+=`\n${l.segment.image(`base64://${n}`)}`}catch(e){new l.Logger("puppeteer").warn(e),o+=`\n${m(t.issue.title)}\n${m(t.issue.body||"")}`}}else if("assigned"===t.action)o=`${t.repository.full_name}#${t.issue.number}: Assigned ${t.assignee.login}`;else if("unassigned"===t.action)o=`${t.repository.full_name}#${t.issue.number}: Unassigned ${t.assignee.login}`;else if("closed"===t.action)o=`${t.sender.login} closed ${t.repository.full_name}#${t.issue.number}.`;else if(["reopened","locked","unlocked"].includes(t.action))o=`${t.sender.login} ${t.action} Issue:${t.repository.full_name}#${t.issue.number}`;else{if("labeled"===t.action)return[];o=`Unknown issue action: ${t.action}`}return[o,{link:(null===(n=t.comment)||void 0===n?void 0:n.html_url)||t.issue.html_url,reponame:t.repository.full_name,issueId:t.issue.number}]},async interact(e,n,o,a){if(e.includes("!!link"))return[o.link];const i=await a();var r;return await(r=`https://api.github.com/repos/${o.reponame}/issues/${o.issueId}/comments`,c.get(r).proxy(t.proxy).set("Accept","application/vnd.github.v3+json").set("User-Agent","HydroBot")).set("Authorization",`token ${i}`).send({body:e}),[]}},issue_comment:{merge:e=>`${e.repository.full_name}/${e.issue.number}`,async hook(t){let n;if("created"===t.action||"edited"===t.action){if("codecov[bot]"===t.comment.user.login)return[];n=`${t.comment.user.login} ${"created"===t.action?"commented":"edited a comment"} on ${t.repository.full_name}#${t.issue.number}\n${t.issue.title}`;try{const o=await g(e.puppeteer,t.issue.html_url,`#${t.comment.html_url.split("#")[1]}`,[86,14,92,20]);n+=`\n${l.segment.image(`base64://${o}`)}`}catch(e){new l.Logger("puppeteer").warn(e),n+=`\n${m(t.comment.body)}`}}return[n,{link:t.issue.html_url,reponame:t.repository.full_name,issueId:t.issue.number}]},interact:o},pull_request:{merge:e=>`${e.repository.full_name}/${e.pull_request.number}`,async hook(t){let n;const{full_name:o,owner:a}=t.repository,{user:i,html_url:r,title:s,base:c,head:u,number:d,merged:p}=t.pull_request,f=new RegExp(`^${a.login}:`),h=c.label.replace(f,""),_=u.label.replace(f,"");if("opened"===t.action){n=`${i.login} opened an pull request for ${o}#${d}(${h}<${_})`;try{const t=await g(e.puppeteer,r,".js-discussion",[68,160,92,160]);n+=`\n${l.segment.image(`base64://${t}`)}`}catch(e){new l.Logger("puppeteer").warn(e),n+=`\n${s}`,n+=`\n${m(t.pull_request.body||"")}`}}else if("created"===t.action)n=`${i.login} commented on ${o}#${d}(${h}<${_})`,n+=`\n${t.comment.body}`;else if("assigned"===t.action)n=`${o}#${d}: Assigned ${t.assignee.login}`;else if("unassigned"===t.action)n=`${o}#${d}: Unassigned ${t.assignee.login}`;else if("review_requested"===t.action)n=`${o}#${d}: Request a review.`;else if("closed"===t.action){const e=p?"merged":"closed";n=`${t.sender.login} ${e} ${o}#${d}(${h}<${_})`}else n=["reopened","locked","unlocked"].includes(t.action)?`${t.sender.login} ${t.action} PR:${o}#${d}`:["synchronize"].includes(t.action)?"":"ready_for_review"===t.action?`${o}#${d} is ready for review.`:`Unknown pull request action: ${t.action}`;return[n,{link:r,reponame:o,issueId:d}]},interact:o},pull_request_review:{merge:!0,hook:async e=>"commented"===e.review.state?[]:"approved"===e.review.state?[`${e.sender.login} approved ${e.repository.full_name}#${e.pull_request.number}`]:[void 0,{link:e.pull_request.html_url,reponame:e.repository.full_name,issueId:e.pull_request.number}],interact:o},pull_request_review_comment:{merge:!0,async hook(e){let t="";return"created"===e.action&&(t=`${e.comment.user.login} commented on ${e.repository.full_name}#${e.pull_request.number}\n`,t+=m(e.comment.body)),[t,{link:e.pull_request.html_url,reponame:e.repository.full_name,issueId:e.pull_request.number}]},interact:o},star:{merge:!0,hook:async e=>"created"===e.action?await a.findOne({type:"star",user:e.sender.login,repo:e.repository.full_name})?[]:[`${e.sender.login} starred ${e.repository.full_name} (total ${e.repository.stargazers_count} stargazers)`,{user:e.sender.login,repo:e.repository.full_name}]:[]},watch:{merge:!0,hook:async e=>"created"===e.action?await a.findOne({type:"watch",user:e.sender.login,repo:e.repository.full_name})?[]:[`${e.sender.login} is watching ${e.repository.full_name} (total ${e.repository.watchers_count} watchers)`,{user:e.sender.login,repo:e.repository.full_name}]:[]},project_card:{},project_column:{},check_run:{},check_suite:{},workflow_job:{},repository_vulnerability_alert:{},status:{},label:{},deployment_status:{},deployment:{},page_build:{}};e.router.post("/github",(async t=>{try{const r=t.request.headers["x-github-event"];let c;c="string"==typeof t.request.body.payload?JSON.parse(t.request.body.payload):t.request.body;const u=(o=JSON.stringify(c),s.default.createHash("sha256").update(o).digest("hex"));if(i[r]||(i[r]={hook:e=>Promise.resolve([`${e.repository.full_name} triggered an unknown event: ${r}`])}),i[r].hook){const o=c.repository.full_name,[s,l]=await i[r].hook(c);if(await a.findOne({_id:u}))t.body="Duplicate event";else{let i=[];if(s){const t=await n.findOne({_id:o.toLowerCase()});if(t)for(const n of t.target){const[t,o]=n.split(":"),a=await e.database.getChannel(t,o,["assignee"]);a.assignee&&e.bots[`${t}:${a.assignee}`]?i.push(e.bots[`${t}:${a.assignee}`].sendMessage(o,s)):p.warn("Cannot send message to %s:%d with assignee %d",t,n,a.assignee)}i=await Promise.all(i),await a.insertOne({_id:u,type:r,relativeIds:i,...l})}t.body=`Pushed to ${i.length} group(s)`}}else t.body="Event ignored."}catch(e){console.log(e),t.body=e.toString()}var o})),e.router.get("/github/authorize",(async n=>{const[o,a]=n.query.state.split(":"),i=n.query.code,r=await c.post("https://github.com/login/oauth/access_token").proxy(t.proxy).send({client_id:t.client_id,client_secret:t.client_secret,code:i,redirect_uri:t.redirect_uri,state:n.query.state});r.body.access_token?(await e.database.setUser(o,a,{GithubToken:r.body}),n.body="Done"):n.body="Error"})),e.middleware((async(n,o)=>{var r,s,u,l;if("onebot"===n.platform){if(/github\.com\/[a-zA-Z0-9-_.]+\/[a-zA-Z0-9-_.]+/.test(n.content)){const e=/(github\.com\/[a-zA-Z0-9-_.]+\/[a-zA-Z0-9-_.]+(\/(issues|pull)\/\d+)?)/.exec(n.content)[1];return"/"===(null===(r=n.content.split(e)[1])||void 0===r?void 0:r[0])?o():n.execute(`github.repo ${e}`)}if(/^[a-zA-Z0-9-_.]+\/[a-zA-Z0-9-_.]+#\d+/.test(n.content)){const e=/([a-zA-Z0-9-_.]+\/[a-zA-Z0-9-_.]+)#(\d+)/.exec(n.content);return n.execute(`github.repo github.com/${e[1]}/issues/${e[2]}`)}}if(!n.quote)return o();const d=n.parsed.content.replace(/\[CQ:at,.*\]/g,"").replace(/\[CQ:image,file=(.*)\]/g,(e=>` ![](${/\[CQ:image,file=(.*)\]/g.exec(e)[1]}) `)).decode().trim();if(!d)return o();const[m,g]=await Promise.all([a.findOne({relativeIds:n.quote.messageId}),e.database.getUser(n.platform,n.userId,["GithubToken"])]);if(m&&i[m.type].interact){if(p.info(d),p.info("Reply: %s",m),d.startsWith("//"))return o();try{async function o(){var o;if(!(null===(o=g.GithubToken)||void 0===o?void 0:o.access_token))throw new f;if(200!==(await c.get("https://api.github.com/").proxy(t.proxy).set("Authorization",`token ${g.GithubToken.access_token}`).set("User-Agent","HydroBot")).status){if(!g.GithubToken.refresh_token)throw new f;const o=await c.post("https://github.com/login/oauth/access_token").proxy(t.proxy).set("User-Agent","HydroBot").send({grant_type:"refresh_token",client_id:t.client_id,client_secret:t.client_secret,refresh_token:g.GithubToken.refresh_token});if(!o.body.access_token)throw new f;return await e.database.setUser(n.platform,n.userId,{GithubToken:o.body}),o.body.access_token}return g.GithubToken.access_token}let r;try{r=await i[m.type].interact(d.trim(),n,m,o),console.log(r)}catch(e){if(console.log("catch",e),e instanceof f)return n.send("请先使用 github.auth <username> 或 github.token <token> 设置凭据。");throw e}const[s,u]=r;s&&await n.send(s),u&&await a.updateOne({_id:m._id},{$set:u})}catch(e){const t=[e.message];"string"==typeof(null===(s=e.body)||void 0===s?void 0:s.message)&&t.push(e.body.message),"string"==typeof(null===(l=null===(u=e.body)||void 0===u?void 0:u.error)||void 0===l?void 0:l.message)&&t.push(e.body.error.message),n.send(t.join("\n"))}return o()}})),e.select("groupId").command("github.repo <name>").action((async(e,t)=>{var n,o;try{const e=await c.get(`https://${t.replace("github.com","github.undefined.moe")}`),a=new d.JSDOM(e.text),i=null===(n=a.window.document.querySelector('meta[property="og:image"]'))||void 0===n?void 0:n.getAttribute("content").replace("opengraph.githubassets.com","github.undefined.moe/opengraph").replace("avatars.githubusercontent.com","github.undefined.moe/avatars"),r=null===(o=a.window.document.querySelector('meta[property="og:image:alt"]'))||void 0===o?void 0:o.getAttribute("content").replace(/ Contribute to .+ development by creating an account on GitHub\./g,"");if(i&&!i.includes("opengraph"))return r+l.s.image(i);if(i)return l.s.image(i)}catch(e){}})),e.select("groupId").command("github.listen <repo>","监听一个Repository的事件").action((async({session:e},t)=>{if(2!==(t=t.toLowerCase()).split("/").length)return"无效地址";return await n.findOne({_id:t})?(await n.updateOne({_id:t},{$addToSet:{target:`${e.platform}:${e.groupId}`}},{upsert:!0}),`Watching ${t}`):(await n.insertOne({_id:t,target:[`${e.platform}:${e.groupId}`]}),`Watching ${t}\n(请创建 webhook 投递至 https://github.undefined.moe/webhook ，格式 application/json )`)})),e.select("groupId").command("github.list","List repos").action((async({session:e})=>(await n.find({target:`${e.platform}:${e.groupId}`}).project({_id:1}).toArray()).map((e=>e._id)).join("\n"))),e.select("groupId").command("github.cancel <repo>","取消一个Repository的事件").action((async({session:e},t)=>(await n.updateOne({_id:t.toLowerCase()},{$pull:{target:`${e.platform}:${e.groupId}`}}),`Cancelled ${t}.`))),e.command("github.token <token>","设置token").userFields(["GithubToken"]).action((async({session:e},t)=>(e.user.GithubToken={access_token:t,refresh_token:""},"设置成功"))),e.command("github.auth <username>","登录账号").userFields(["GithubToken"]).action((async({session:e},n)=>`请点击下面的链接继续操作：\nhttps://github.com/login/oauth/authorize?client_id=${t.client_id}&state=${e.platform}:${e.userId}&redirect_url=${t.redirect_uri}&scope=admin%3Arepo_hook%2Crepo&login=${n}`))}))}},4819:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=n(3129),i=o(n(5622)),r=n(2087),s=n(280),c=n(4298);t.apply=e=>{e.command("glados <message:text>","Glados",{minInterval:3e4}).action((async({session:e},t)=>{const n=Math.random().toString(),o=i.default.resolve(r.tmpdir(),`${n}.wav`);if(await new Promise((e=>{a.exec(`wget --tries=50 -O ${o} https://glados.c-net.org/generate?text=${encodeURIComponent(t)}`,(t=>{t&&e(t),e(void 0)}))}))){e.send("请求正在处理中，请稍后（这可能需要数分钟）"),await s.sleep(1e5);if(await new Promise((e=>{a.exec(`wget --tries=50 -O ${o} https://glados.c-net.org/generate?text=${encodeURIComponent(t)}`,(t=>{t&&e(t),e(void 0)}))})))throw new Error("Service Error")}await e.send(`[CQ:record,file=file://${o}]`),await c.unlink(o)}))}},1266:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=n(2944),i=o(n(9949));t.apply=async function(e,t){e.command("hydro","Hydro").action((({session:e})=>e.execute("hydro -h"))),e.command("hydro/bzoj","Hydro BZOJ").action((({session:e})=>e.execute("bzoj -h"))),e.command("hydro/bzoj.hot","BZOJ今日热门题目",{minInterval:6e4}).action((async()=>{const e=new a.google.auth.JWT({email:t.mail,scopes:"https://www.googleapis.com/auth/analytics.readonly",key:t.privateKey});await e.authorize();const n=a.google.analytics({version:"v3",auth:e,agent:i.default(t.proxy)}),{data:o}=await n.data.ga.get({ids:t.resId,"start-date":"yesterday","end-date":"today",metrics:"ga:uniquePageviews",dimensions:"ga:pagePath",sort:"-ga:uniquePageviews","max-results":1e3}),r=o.rows.map((e=>{var t;if(!e[0].startsWith("/d/bzoj/"))return;const n=null===(t=/^\/d\/bzoj\/p\/(\d+)$/.exec(e[0]))||void 0===t?void 0:t[1];return n?[+n,+e[1]]:null})).filter((e=>!!e));return`今日热门题目： P${r[0][0]} P${r[1][0]} P${r[2][0]}`}))}},7780:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=o(n(5622)),i=o(n(4515)),r=n(4298),s={};try{const e=n(9802);for(const t of e)s[t.id]=t.id,s[t.name]=t.id}catch(e){}try{const e=n(2293);for(const t of e)s[t.name]=t.id}catch(e){}async function c({session:e},t){if(!t.trim())return await e.send("请输入要查看的Card ID/Name");if(!Object.keys(s).length){const e=await i.default.get("https://api.hearthstonejson.com/v1/latest/zhCN/cards.collectible.json");await r.writeFile(a.default.resolve(__dirname,"..","..",".cache","hs_card_zhCN.json"),JSON.stringify(e.body));for(const t of e.body)s[t.id]=t.id,s[t.name]=t.id;const t=await i.default.get("https://api.hearthstonejson.com/v1/latest/enUS/cards.collectible.json");await r.writeFile(a.default.resolve(__dirname,"..","..",".cache","hs_card_enUS.json"),JSON.stringify(t.body));for(const e of t.body)s[e.name]=e.id}return s[t]?e.send(`[CQ:image,file=https://art.hearthstonejson.com/v1/render/latest/zhCN/512x/${s[t]}.png]`):await e.send("NotFound")}t.apply=e=>{e.command("card <name/id:text>","Get a card").action(c)}},1263:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const n=[100,101,200,201,202,204,206,207,300,301,302,303,304,305,307,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,420,421,422,423,424,425,426,429,431,444,450,451,499,500,501,502,503,504,505,506,507,508,509,510,511,599];t.apply=function(e){e.command("cat <id:number>","http.cat",{minInterval:1e3}).action((async(e,t)=>n.includes(t)?`[CQ:image,file=https://cdn.jsdelivr.net/gh/httpcats/http.cat/public/images/${t}.jpg]`:`你家http协议会返回${t}？`))}},5452:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=o(n(4515));t.apply=function(e){e.select("channelId","1091497622").on("before-attach-user",((e,t)=>t.add("hydroWarn"))),e.select("channelId","1091497622").middleware((async(e,t)=>{const n=/luogu\.com\.cn\/discuss\/show\/(\d+)/g.exec(e.content);if(n&&n[1]){const t=await a.default.get(`https://www.luogu.com.cn/discuss/show/${n[1]}`);(t.text||t.body).includes('target="_blank">灌水区</a></span>')&&(e.user.hydroWarn||e.send("警告：请勿发送灌水版内容。"),e.user.hydroWarn=(e.user.hydroWarn||0)+1,e.bot.deleteMessage(e.channelId,e.messageId))}return await t()}))}},5778:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.apply=void 0;const path_1=__webpack_require__(5622),superagent_1=__importDefault(__webpack_require__(4515)),crypto_1=__webpack_require__(6417),koishi_core_1=__webpack_require__(8664),js_yaml_1=__importDefault(__webpack_require__(6675)),axios_1=__importDefault(__webpack_require__(2376)),fs_extra_1=__webpack_require__(4298),sharp_1=__importDefault(__webpack_require__(742)),logger=new koishi_core_1.Logger("imagetag"),imageRE=/(\[CQ:image,file=[^,]+,url=[^\]]+\])/,checkGroupAdmin=({session:e})=>e.user.authority>=4||e.author.roles.includes("admin")||e.author.roles.includes("owner")?null:"仅管理员可执行该操作。";function MD5(e){const t=crypto_1.createHash("md5");return t.update(e),t.digest("hex")}const apply=async(ctx,config={})=>{const transfile=await fs_extra_1.readFile(path_1.resolve(process.cwd(),"database","image.tags.translation.yaml")),trans=js_yaml_1.default.load(transfile.toString()),names=eval("require")(`${process.cwd()}/database/class_names_6000.json`);ctx.on("before-attach-channel",((e,t)=>{t.add("enableAutoTag")})),ctx.middleware((async(e,t)=>{const n=imageRE.exec(e.content);return n&&(2===e.channel.enableAutoTag?e.executeSilent(`tag ${n[1]}`):1===e.channel.enableAutoTag&&e.execute(`tag ${n[1]}`)),t()})),ctx.app.on("connect",(async()=>{const e=ctx.app.database.mongo.collection("image.tag");e.createIndex({md5:1},{unique:!0}),ctx.command("tag [image]","Get image tag",{hidden:!0,minInterval:2e3}).action((async({session:t},n)=>{try{let o;n||(await t.send("请发送图片。"),n=await t.prompt(3e4));let a=n;const i=koishi_core_1.segment.from(n);if(i){if("image"!==i.type)throw new Error("没有发现图片。");a=i.data.url,o=i.data.file}if(!a.startsWith("http"))throw new Error("没有发现图片。");o||(o=Buffer.from(a).toString("base64"));let r=await e.findOne({_id:o});if(r)return r.txt;const{data:s}=await axios_1.default.get(a,{responseType:"arraybuffer"}),c=Buffer.alloc(s.byteLength),u=new Uint8Array(s);for(let e=0;e<c.length;++e)c[e]=u[e];const l=MD5(c);if(r=await e.findOne({md5:l}),r)return r.txt;const d=(await sharp_1.default(c).png().toBuffer()).toString("base64");logger.info("downloaded");const{data:p}=await axios_1.default.post("http://127.0.0.1:10377/",{img:d});if("string"==typeof p){let t=p.split("HTTP")[0];throw(p.includes("output with shape")||p.includes("size of tensor"))&&(t="不支持的图片格式（请尝试截图发送）",await e.insertOne({_id:o,md5:l,txt:t})),new Error(t)}const f=[];let m="";for(const e of p)f.push(names[e[0]]),m+=`${trans[names[e[0]]]||names[e[0]]}:${Math.floor(100*e[1])}%  `;if(logger.info(m),config.url&&config.tags)for(const e of f)if(config.tags.includes(e)||f.length>7){superagent_1.default.get(`${config.url}&source=${encodeURIComponent(a)}&format=json`).end((e=>{e&&logger.error(e)}));break}return await e.insertOne({_id:o,md5:l,txt:m}),m}catch(e){return e.toString().split("\n")[0]}})),ctx.command("tag.disable","在群内禁用",{noRedirect:!0}).userFields(["authority"]).check(checkGroupAdmin).channelFields(["enableAutoTag"]).action((({session:e})=>(e.channel.enableAutoTag=0,"Disabled"))),ctx.command("tag.enable","在群内启用",{noRedirect:!0}).option("silent","-s").userFields(["authority"]).check(checkGroupAdmin).channelFields(["enableAutoTag"]).action((({session:e,options:t})=>(e.channel.enableAutoTag=t.silent?2:1,"enabled")))}))};exports.apply=apply},1925:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0,t.apply=function(e){e.command("jjwz","绝句文章"),e.command("jjwz.add <content:text>","创建/添加").channelFields(["jjwz"]).userFields(["id"]).action((async({session:e},t)=>{if(t.length>7)return"你怎么写这么长";if(e.channel.jjwz){if((e.channel.jjwz[e.channel.jjwz.length-1]||[])[0]===+e.user.id)return"你不能连续添加"}else e.channel.jjwz=[];return e.channel.jjwz.push([+e.user.id,t]),`${e.channel.jjwz.map((e=>e[1])).join("")}...`})),e.command("jjwz.end","结束").channelFields(["jjwz"]).userFields(["id"]).action((async({session:e})=>e.channel.jjwz?(e.channel.jjwz=null,e.channel.jjwz.map((e=>e[1])).join("")):"还未开始")),e.command("jjwz.edit <content:text>","编辑").channelFields(["jjwz"]).userFields(["id"]).action((async({session:e},t)=>e.channel.jjwz?t.length>7?"你怎么写这么长":e.channel.jjwz[e.channel.jjwz.length-1][0]!==+e.user.id?"上一条不是你所编辑":(e.channel.jjwz[e.channel.jjwz.length-1][1]=t,`${e.channel.jjwz.map((e=>e[1])).join("")}...`):"还未开始")),e.command("jjwz.del","删除").channelFields(["jjwz"]).userFields(["id"]).action((async({session:e})=>e.channel.jjwz?e.channel.jjwz[e.channel.jjwz.length-1][0]!==+e.user.id?"上一条不是你所编辑":(e.channel.jjwz.pop(),`${e.channel.jjwz.map((e=>e[1])).join("")}...`):"还未开始"))}},2179:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=n(7548),i=o(n(2470)),r=n(7547);i.default.locale("zh-cn");const s={expireDays:7,serviceFee:.03,maxBuyPerDay:10};t.apply=(e,t)=>{t={...s,...t},e.on("connect",(()=>{const n=e.database.mongo.collection("kabu.price");n.createIndex("expire",{expireAfterSeconds:0});const o=e.database.mongo.collection("kabu.stock");async function s(e){const t=await n.findOne({_id:e});if(t)return[t.price,t.bought||0];const o=Math.floor(Math.random()<.5?10+Math.sqrt(400*Math.random()):50-Math.sqrt(400*Math.random()));return await n.insertOne({_id:e,price:o,expire:r.endOfToday(),bought:0}),[o,0]}o.createIndex({userId:1,expire:1}),o.createIndex("expire",{expireAfterSeconds:0}),e.command("kabu.query","查询自己的库存以及今日大头菜价格").shortcut("查询大头菜",{prefix:!1}).userFields(["coin","id"]).action((async({session:e})=>{const[n,a]=await Promise.all([o.find({userId:+e.user.id}).sort("expire",1).limit(10).toArray(),o.find({userId:+e.user.id}).count()]);let r="",c=0;for(const{number:e,buyPrice:t,expire:o}of n)c+=e,r+=`你有 ${e} 棵以 ${t} 个硬币每棵买入的大头菜，它们会在 ${i.default(o).fromNow()} 烂掉。\n`;const[u,l]=await s(+e.user.id),d=t.maxBuyPerDay-l;return e.user.coin||(e.user.coin=0),0===a?r="你现在手上还没有大头菜"+(e.user.coin>=u&&d?"，要来买点吗？":"。"):a>n.length&&(r+=`隐藏了 ${a-n.length} 个条目。`),`你现在共有 ${c} 棵大头菜和 ${e.user.coin} 个硬币。\n今天卖给 ${e.username} 的大头菜价格是每棵 ${u} 硬币。您今天还可购入${d}个大头菜。\n${r}`})),e.command("kabu.buy [number]",`购买大头菜。若不指定数量则尽量多地购买。手续费 ${100*t.serviceFee}%。`,{noRedirect:!0}).shortcut("购买大头菜",{prefix:!1,fuzzy:!0}).userFields(["coin","id"]).action((async({session:e},r)=>{const[c,u]=await s(+e.user.id);e.user.coin||(e.user.coin=0);const l=Math.floor(e.user.coin/c/(1+t.serviceFee)),d=Math.min(t.maxBuyPerDay-u,+(null!=r?r:l));if(!Number.isInteger(d)||d<=0||d>l)return`购买数量需要是 1~${l} 之间的正整数。`;const p=i.default();p.add(t.expireDays,"days"),await o.insertOne({_id:new a.ObjectId,userId:+e.user.id,number:d,buyPrice:c,expire:p.toDate()});const f=Math.ceil((1+t.serviceFee)*c*d);return e.user.coin-=f,await n.updateOne({_id:+e.user.id},{$set:{bought:d+u}}),`你花了 ${f} 个硬币（含 ${f-c*d} 个硬币的手续费）以 ${c} 每棵的价格购买了 ${d} 棵大头菜。\n要是你没有在 ${t.expireDays} 天内把大头菜卖掉，它们就会全部烂掉，害你大亏本！一定要注意这一点喔。`})),e.command("kabu.sell [number]",`卖出最早购买（最先烂掉）的大头菜。若不指定数量则全部卖出。手续费 ${100*t.serviceFee}%。`,{noRedirect:!0}).shortcut("卖出大头菜",{prefix:!1,fuzzy:!0}).userFields(["coin","id"]).action((async({session:e},n)=>{const a=+(null!=n?n:1/0);if(a!==1/0&&(!Number.isInteger(a)||a<=0))return"卖出的数量需要是一个正整数";const i=await o.find({userId:+e.user.id}).sort("expire",1).toArray();let r=0,c=null;const u=[];for(const e of i)if(r+e.number<=a)r+=e.number,u.push(e._id);else if(r<a){c={_id:e._id,newNumber:e.number-(a-r)},r=a;break}if(0===r||a!==1/0&&r!==a)return"你没有足够多的大头菜来卖出！";const[l]=await s(+e.user.id);e.user.coin||(e.user.coin=0);const d=Math.floor((1-t.serviceFee)*r*l);return e.user.coin+=d,u.length&&await o.deleteMany({_id:{$in:u}}),c&&await o.updateOne({_id:c._id},{$set:{number:c.newNumber}}),`你已成功卖出 ${r} 棵大头菜，获得了 ${d} 个硬币（已扣除 ${r*l-d} 个硬币的手续费）！`}))})),e.command("kabu","大头菜")}},1787:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=o(n(4515)),i=new(n(8664).Logger)("luogu");t.apply=e=>{e.command("oi","OI related"),e.command("oi/luogu","Luogu"),e.command("oi/luogu.problem <pid>","获取Luogu题目").action((async(t,n)=>{const o=await e.app.puppeteer.page();try{await o.goto(`https://www.luogu.com.cn/problem/${n}`,{waitUntil:"networkidle0"})}catch(e){return o.close(),"请求超时。"}return(await o.$(".problem-card")).screenshot({type:"jpeg"}).then((async e=>(o.close(),`[CQ:image,file=base64://${e.toString("base64")}]`)),(e=>(o.close(),i.debug(e),"截图失败。")))})),e.command("oi/luogu.user <uid>","查询用户").action((async(e,t)=>{const n=await a.default.get(`https://www.luogu.com.cn/user/${t}?_contentOnly=1`).set("User-Agent","Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko");if("404"===n.body.code)return"没这个人!";const o=n.body.currentData.user,i=0===o.ccfLevel?"无/藏了以方便假":o.ccfLevel;return`${o.name}\n关注: ${o.followingCount}\n粉丝: ${o.followerCount}${o.passedProblemCount?`\nACs/Submits: ${o.passedProblemCount}/${o.submittedProblemCount}`:""}\n颜色: ${o.color}\nCCF评级:${i}`}))}},7750:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=o(n(2376));t.apply=e=>{e.middleware((async(e,t)=>{if(e.content.includes("https://bot-api.lxns.net/bot-message/")){const t=await a.default.get(`https://${e.content.split("https://")[1]}`);e.content=t.data.replace(/<.*?>/g,"")}await t()}),!0)}},1078:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=n(8664),i=o(n(4515));t.apply=function(e){e.command("tools","实用工具"),e.command("tools/ocr [image]",{minInterval:3e3}).action((async({session:e},t)=>{if(t||(await e.sendQueued("请发送图片。"),t=await e.prompt(3e4)),!t)return"没有检测到图片。";const n=a.segment.from(t),o=await i.default.get(`https://ai.qq.com/cgi-bin/appdemo_imagetranslate?image_url=${n.data.url}`);return 0!==o.body.ret?o.body.msg:o.body.data.image_records.map((e=>e.source_text)).join("")}))}},8140:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=o(n(4515)),i=n(3804),r={"-1":"女",0:"未知",1:"男"};t.apply=function(e){e.command("oi","OI Related"),e.command("oi/oier <query>","查询oier",{minInterval:3e4}).action((async(e,t)=>{const n=await a.default.get(`https://bytew.net/OIer/search.php?method=normal&q=${encodeURIComponent(t)}`),{result:o}=JSON.parse(n.text);let s="";for(const e of i.take(o,3)){const t=JSON.parse(e.awards.replace(/'/gim,'"'));s+=`姓名：${e.name}  生理性别：${r[e.sex]}\n`;for(const e of i.take(t,5))s+=`于${e.grade}时在${e.province}${e.school}参加${e.identity}，`,e.score&&(s+=`以${e.score}的成绩`),s+=`取得${e.award_type}，排名${e.rank}。\n`;t.length>5&&(s+=t.length-5+"个奖项被隐藏。\n")}return o.length>3&&(s+=o.length-3+"个搜索结果被隐藏。"),s}))}},5405:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const o=n(8664);t.apply=e=>{e.command("proxy <command:text>","Proxy a command",{hidden:!0,authority:4}).option("user","-u <userId>").option("self","-s <selfId>").option("group","-g <groupId>").option("length","-l <length>",{fallback:1}).action((async({session:t,options:n},a)=>{const i=new o.Session(e.app,t);if(delete i.groupId,n.group?(i.groupId=n.group,i.subtype="group"):(i.groupId=void 0,i.subtype="private"),n.self&&(i.selfId=n.self),n.user){const e=n.user;if(!e)return"未指定目标。";i.userId=e}await i.send(a);let r="";for(let e=1;e<=n.length;e++)r+=await i.prompt(3e4);return r}))}},3372:function(e,t,n){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const a=o(n(2376)),i=n(2519),r={c:{type:"compiler",compile:["/usr/bin/gcc","-O2","-Wall","-std=c99","-o","code","foo.c","-lm","-fdiagnostics-color=always"],code_file:"foo.c",execute:["/w/code"]},cc:{type:"compiler",compile:["/usr/bin/g++-7","-O2","-Wall","-std=c++11","-o","code","foo.cc","-lm","-fdiagnostics-color=always"],code_file:"foo.cc",execute:["/w/code"]},pas:{type:"compiler",compile:["/usr/bin/fpc","-O2","-o/w/code","foo.pas"],code_file:"foo.pas",execute:["/w/code"]},py:{type:"interpreter",code_file:"foo.py",execute:["/usr/bin/python","foo.py"]},py2:{type:"interpreter",code_file:"foo.py",execute:["/usr/bin/python","foo.py"]},py3:{type:"interpreter",code_file:"foo.py",execute:["/usr/bin/python3","foo.py"]},java:{type:"compiler",compile:["/usr/bin/javac","-d","/w","-encoding","utf8","./Main.java"],code_file:"Main.java",copyOut:"Main.class",execute:["/usr/bin/java","Main"]},php:{type:"interpreter",code_file:"foo.php",execute:["/usr/bin/php","foo.php"]},js:{type:"interpreter",code_file:"foo.js",execute:["/usr/bin/jsc","/w/foo.js"]},go:{type:"compiler",compile:["/usr/bin/go","build","-o","foo","foo.go"],code_file:"foo.go",execute:["/w/foo"]},sh:{type:"interpreter",code_file:"foo.sh",execute:["/bin/bash","foo.sh"]},cs:{type:"compiler",compile:["/usr/bin/mcs","-optimize+","-out:/w/foo","/w/foo.cs"],code_file:"foo.cs",execute:["/usr/bin/mono","foo"]}},s=["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","HOME=/w"],c=a.default.create({baseURL:"http://localhost:5050"});async function u(e,{time_limit_ms:t=5e3,memory_limit_mb:n=256,process_limit:o=32,stdin:a="",copyIn:i={},copyOut:r=[],copyOutCached:u=null}={}){let l,d;try{d={cmd:[{args:e,env:s,files:[a?{content:a}:{content:""},{name:"stdout",max:20480},{name:"stderr",max:20480}],cpuLimit:1e3*t*1e3,readCpuLimit:1200*t*1e3,memoryLimit:1024*n*1024,procLimit:o,copyIn:i,copyOut:r,copyOutCached:u}]};l=(await c.post("/run",d)).data[0]}catch(e){throw console.log(e),e}const p={status:l.status,time_usage_ms:l.time/1e6,memory_usage_kb:l.memory/1024,files:l.files};return l.files=l.files||{},p.stdout=l.files.stdout||"",p.stderr=l.files.stderr||"",l.error&&(p.error=l.error),p.files=l.files,l.fileIds&&(p.fileIds=l.fileIds),p}async function l(e,t,n){const{status:o,stdout:a,stderr:i}=await async function(e,t,n){const o={},a=r[t];if(!r[t])return{status:"SystemError",stdout:"不支持的语言",stderr:"目前支持sh,c,cc,pas,py2,py3,js,cs,go,php,java"};if(o[a.code_file]={content:e},"compiler"===a.type){const{status:e,stdout:t,stderr:n,fileIds:i}=await u(a.compile,{copyIn:o,copyOutCached:[a.copyOut||"code"]});if("Accepted"!==e)return{status:`Compile Error:${e}`,stdout:t,stderr:n};const r=await u(a.execute,{copyIn:{[a.copyOut||"code"]:{fileId:i[a.copyOut||"code"]}}});return await c.delete(`/file/${i[a.copyOut||"code"]}`),r}return"interpreter"===a.type?await u(a.execute,{copyIn:o,stdin:n}):void 0}(e,t,n).catch((e=>({status:"SystemError",stdout:e.toString(),stderr:""})));return"Accepted"===o?`Execute result: \n${a}\n${i}`:`Error: ${o}\n${a}\n${i}`}t.apply=e=>{e.command("tools","实用工具"),e.command("tools/run <language> <code:text>","运行程序",{minInterval:1e3}).alias("code").option("input","启用stdin").action((async({session:t,options:n},o,a)=>{n.input&&t.send("Please input:");const r=n.input?await t.prompt(1e4):"",s=await l(a.replace(/\r/gim,"").decode(),o,r.decode());if(s.length>256||s.split("\n").length>10){const t=await e.puppeteer.page();return`[CQ:image,file=base64://${await i.text2png(t,s)}]`}return s}))}},8260:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return a(t,e),t},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const s=r(n(2087)),c=r(n(5622)),u=r(n(4515)),l=i(n(4298)),d=r(n(742)),p=r(n(124)),f=n(7548),m=p.default.Library(c.default.resolve(__dirname,"sayobot"),{MakePersonalCard:["string",["string"]],Sayobot_SetPath:["string",["string","string"]]}),g=c.default.resolve(__dirname,"png"),h=c.default.resolve(__dirname,"fonts"),_=c.default.resolve(__dirname,"png","stat"),y=c.default.resolve(__dirname,"png","tk"),b=c.default.resolve(__dirname,"png","avatars");m.Sayobot_SetPath("png",g),m.Sayobot_SetPath("font",h);const w={_id:"123456",account:0,sign:"无",nickname:"Sayobot",Opacity:50,history:[],ProfileEdge:"adm0.png",DataEdge:"adm1.png",SignEdge:"adm1.png",ProfileFontColor:"#000000",DataFontColor:"#000000",SignFontColor:"#000000",Background:"1.png"};var x;!function(e){e.modes={std:0,taiko:1,ctb:2,mania:3},e.getUserIDByNick=async function(e){const t=await u.default.get(`https://api.sayobot.cn/ppy/get_user?u=${e}&m=0`);return 404===t.status?"阁下，小夜找不到这个人呢":200!==t.status?`Status: ${t.status}`:t.body.length?parseInt(t.body[0].user_id,10):"阁下，小夜找不到这个人呢"},e.getUser=async function(e,t){const n=await u.default.get(`https://api.sayobot.cn/ppy/get_user?u=${e}&m=${t}`);if(404===n.status)return"阁下，小夜找不到这个人呢";if(200!==n.status)return`Status: ${n.status}`;if(!n.body.length)return"阁下，小夜找不到这个人呢";const o=n.body[0];return{mode:t,username:o.username,count300:parseInt(o.count300,10),count100:parseInt(o.count100,10),count50:parseInt(o.count50,10),playcount:parseInt(o.playcount,10),ranked_score:parseInt(o.ranked_score,10),total_score:parseInt(o.total_score,10),pp_rank:parseInt(o.pp_rank,10),level:parseFloat(o.level),pp_raw:parseFloat(o.pp_raw),accuracy:parseFloat(o.accuracy),count_rank_ss:parseInt(o.count_rank_ss,10),count_rank_ssh:parseInt(o.count_rank_ssh,10),count_rank_s:parseInt(o.count_rank_s,10),count_rank_sh:parseInt(o.count_rank_sh,10),count_rank_a:parseInt(o.count_rank_a,10),country:o.country,total_seconds_played:parseInt(o.total_seconds_played,10),pp_country_rank:parseInt(o.pp_country_rank,10)}}}(x||(x={})),t.apply=function(e){e.command("osu","osu"),e.on("connect",(()=>{const t=e.database.collection("osu");function n(e,n){return t.updateOne({_id:e},{$set:n})}e.command("osu.set <nickname:text>","Bind osu account").shortcut("！set",{prefix:!1,fuzzy:!0}).shortcut("! set",{prefix:!1,fuzzy:!0}).shortcut("!set",{prefix:!1,fuzzy:!0}).userFields(["id"]).action((async({session:e},n)=>{const o=await x.getUserIDByNick(n);return"string"==typeof o?o:(await t.updateOne({_id:e.user.id},{$set:{account:o,nickname:n}},{upsert:!0}),"阁下绑定成功啦，发送指令!o就可以查看阁下的资料卡。还有其他指令阁下可以通过!help查看哦")})),e.command("osu.unset","Unset").shortcut("！unset",{prefix:!1}).shortcut("! unset",{prefix:!1}).shortcut("!unset",{prefix:!1}).userFields(["id"]).action((async({session:e})=>(await t.deleteOne({_id:e.user.id})).deletedCount?"啊咧咧，，阁下你叫什么名字呀，突然不记得了，快用 !set 告诉我吧":"阁下还没绑定哦")),e.command("osu.updateSign <sign:text>","updatesign",{checkArgCount:!1}).shortcut("！更新个签",{prefix:!1,fuzzy:!0}).shortcut("! 更新个签",{prefix:!1,fuzzy:!0}).shortcut("!更新个签",{prefix:!1,fuzzy:!0}).shortcut("！更换个签",{prefix:!1,fuzzy:!0}).shortcut("! 更换个签",{prefix:!1,fuzzy:!0}).shortcut("!更换个签",{prefix:!1,fuzzy:!0}).userFields(["id"]).action((async({session:e},o)=>{if(!o)return"更新个签有1个参数哦阁下";if(!await t.findOne({_id:e.user.id}))return"阁下还没绑定哦，用set把阁下的名字告诉我吧";return(await n(e.user.id,{sign:o})).modifiedCount?"更新成功":"更新失败惹"})),e.command("osu.updateEdge [arg0:number] [arg1:number]","updateedge").shortcut("！更新框框",{prefix:!1,fuzzy:!0}).shortcut("! 更新框框",{prefix:!1,fuzzy:!0}).shortcut("!更新框框",{prefix:!1,fuzzy:!0}).shortcut("！更换框框",{prefix:!1,fuzzy:!0}).shortcut("! 更换框框",{prefix:!1,fuzzy:!0}).shortcut("!更换框框",{prefix:!1,fuzzy:!0}).userFields(["id"]).action((async({session:e},o,a)=>{if(!await t.findOne({_id:e.user.id}))return"阁下还没绑定哦，用!set把阁下的名字告诉我吧";if(!o||!a)return"更新框框有2个参数哦阁下";if(!(o>=0&&o<=2))return"更新框框第1个参数是0-2的数字哦阁下";const i=c.default.join(y,`${a+o}.png`);if(!l.default.existsSync(i))return"没有这个框框哦阁下";const r=c.default.join(y,`${a}/0.col`);let s;s=l.default.existsSync(r)?`#${l.default.readFileSync(r).toString()}`:"#000000";return(await n(e.user.id,{[["ProfileFontColor","DataFontColor","SignFontColor"][o]]:s,[["ProfileEdge","DataEdge","SignEdge"][o]]:`${a+o}.png`})).modifiedCount?"更新成功":"更新失败惹"})),e.command("osu.updateBackground [arg0]","updateback",{checkArgCount:!1}).shortcut("！更新背景",{prefix:!1,fuzzy:!0}).shortcut("! 更新背景",{prefix:!1,fuzzy:!0}).shortcut("!更新背景",{prefix:!1,fuzzy:!0}).shortcut("！更换背景",{prefix:!1,fuzzy:!0}).shortcut("! 更换背景",{prefix:!1,fuzzy:!0}).shortcut("!更换背景",{prefix:!1,fuzzy:!0}).userFields(["id"]).action((async({session:e},o)=>{if(!await t.findOne({_id:e.user.id}))return"阁下还没绑定哦，用!set把阁下的名字告诉我吧";if(!o)return"更换背景有1个参数哦阁下";const a=c.default.resolve(_,`${o}.png`);if(!l.default.existsSync(a))return"没有这个背景哦阁下";return(await n(e.user.id,{Background:`${o}.png`})).modifiedCount?"更新成功":"更新失败惹"})),e.command("osu.updateOpacity [arg0:number]","更改透明度",{checkArgCount:!1}).userFields(["id"]).action((async({session:e},o)=>await t.findOne({_id:e.user.id})?o?Number.isNaN(o)||o%5?"更改透明度第1个参数是0-100以内可被5整除的数字哦阁下":(await n(e.user.id,{Opacity:o}),"更新成功"):"更改透明度有1个参数哦阁下":"阁下还没绑定哦，用!set把阁下的名字告诉我吧")),e.command("osu.updateAvatar","刷新头像缓存").userFields(["id"]).action((async({session:e})=>{const n=await t.findOne({_id:e.user.id});if(!n)return"阁下还没绑定哦，用!set把阁下的名字告诉我吧";const o=l.default.createWriteStream(c.default.join(b,`${n.account}.png`));return u.default.get(`https://a.ppy.sh/${n.account}`).pipe(o),"更新头像完成，如果阁下的头像还是没有更新，等一会再试试吧"})),e.command("osu.fetch","Fetch data",{authority:4}).action((async()=>{let e="";const n=(new Date).getTime(),[o,a]=await Promise.all([t.find().count(),t.find().toArray()]);let i=0;for(const n of a){if(!n.history)continue;const o=Array.from(new Set(n.history.map((e=>e.mode))));for(const a of o){const o=(new Date).getTime()-864e5,r=n.history[n.history.length-1];if(1e3*r._id.generationTime>o&&r.mode===a)continue;const s=await x.getUser(n.account,a);i++,"string"==typeof s?e+=`Error ${n._id} ${s}\n`:await t.updateOne({_id:n._id},{$push:{history:{...s,_id:new f.ObjectId,isAuto:!0}}})}}const r=(new Date).getTime()-n;return`更新了${o}条数据，执行了${i}条查询，耗时${Math.floor(r/1e3)}秒\n${e}`})),e.command("osu.stat [userId] [day]","",{minInterval:5e3}).option("mode","-m <mode>",{value:"std"}).shortcut("！o",{prefix:!1,fuzzy:!0,options:{mode:"std"}}).shortcut("!o",{prefix:!1,fuzzy:!0,options:{mode:"std"}}).shortcut("！t",{prefix:!1,fuzzy:!0,options:{mode:"taiko"}}).shortcut("!t",{prefix:!1,fuzzy:!0,options:{mode:"taiko"}}).shortcut("！c",{prefix:!1,fuzzy:!0,options:{mode:"ctb"}}).shortcut("!c",{prefix:!1,fuzzy:!0,options:{mode:"ctb"}}).shortcut("！m",{prefix:!1,fuzzy:!0,options:{mode:"mania"}}).shortcut("!m",{prefix:!1,fuzzy:!0,options:{mode:"mania"}}).userFields(["id"]).action((async({session:e,options:n},o,a)=>{console.time("api");let i,r=0,p=!1;if(o?o.startsWith("#")?(i=e.user.id,p=!0,r=+o.split("#")[1]):(i=o,p=!1,a&&(r=+a.split("#")[1])):(i=e.user.id,p=!0),Number.isNaN(r))return"天数必须是数字哦";const g=c.default.resolve(s.default.tmpdir(),`${Math.random()}.png`);if(void 0===x.modes[n.mode])return"未知的模式";let h=await t.findOne({_id:i});if(!h)return p?"阁下还没绑定哦，用!set把阁下的名字告诉我吧":"小夜还不认识这个人哦，阁下把他介绍给我吧";if(h={...w,...h},!l.default.existsSync(c.default.join(b,`${h.account}.png`))){const e=l.default.createWriteStream(c.default.join(b,`${h.account}.png`));u.default.get(`https://a.ppy.sh/${h.account}`).pipe(e)}const _=await x.getUser(h.account,x.modes[n.mode]);if(console.timeEnd("api"),console.time("image"),"string"==typeof _)return _;if(r){let e;const o=(new Date).getTime()-3600*r*24*1e3;for(let t=h.history.length-1;t>=0;t--){const a=h.history[t];if(1e3*a._id.generationTime<o&&a.mode===x.modes[n.mode]){e=a;break}}if(!e)return`小夜没有查到${p?"阁下":"这个人"}${r}天前的信息`;if(!e.playcount)return(p?"阁下":"这个人")+"还没有玩过这个模式哦，赶紧去试试吧";await t.updateOne({_id:i},{$push:{history:{..._,_id:new f.ObjectId}}});const a=_.count300+_.count100+_.count50,s=e.count300+e.count100+e.count50,c=m.MakePersonalCard([h.DataFontColor,h.ProfileFontColor,h.SignFontColor,x.modes[n.mode],h.account,_.country,_.username,i.toString(),h.sign,h.Background,h.ProfileEdge,h.DataEdge,h.SignEdge,h.Opacity,_.count300,_.count100,_.count50,_.playcount,_.total_score,_.ranked_score,a,_.pp_raw,_.pp_country_rank,_.pp_rank,_.count_rank_ssh,_.count_rank_ss,_.count_rank_sh,_.count_rank_s,_.count_rank_a,_.total_seconds_played,_.level,_.accuracy,e.total_score,e.ranked_score,s,e.accuracy,e.pp_raw,e.level,e.pp_rank,e.pp_country_rank,e.playcount,e.count_rank_ssh,e.count_rank_ss,e.count_rank_sh,e.count_rank_s,e.count_rank_a,r,g].join("\n"));if(c)return c}else{const o=_.count300+_.count100+_.count50;let a=_;for(let e=h.history.length-1;e>=0;e--){const t=h.history[e];if(t.mode===x.modes[n.mode]&&!t.isAuto){a=t;break}}await t.updateOne({_id:i},{$push:{history:{..._,_id:new f.ObjectId}}});const s=a.count300+a.count100+a.count50,c=m.MakePersonalCard([h.DataFontColor,h.ProfileFontColor,h.SignFontColor,x.modes[n.mode],h.account,_.country,_.username,e.userId.toString(),h.sign,h.Background,h.ProfileEdge,h.DataEdge,h.SignEdge,h.Opacity,_.count300,_.count100,_.count50,_.playcount,_.total_score,_.ranked_score,o,_.pp_raw,_.pp_country_rank,_.pp_rank,_.count_rank_ssh,_.count_rank_ss,_.count_rank_sh,_.count_rank_s,_.count_rank_a,_.total_seconds_played,_.level,_.accuracy,a.total_score,a.ranked_score,s,a.accuracy,a.pp_raw,a.level,a.pp_rank,a.pp_country_rank,a.playcount,a.count_rank_ssh,a.count_rank_ss,a.count_rank_sh,a.count_rank_s,a.count_rank_a,r,g].join("\n"));if(c)return c}if(console.timeEnd("image"),!l.default.existsSync(g))return;console.time("compress");const y=await d.default(g).jpeg({quality:80}).toBuffer();return await l.unlink(g),console.timeEnd("compress"),`[CQ:image,file=base64://${y.toString("base64")}]`})),e.command("osu.help [category]","Get help").shortcut("！help",{prefix:!1,fuzzy:!0}).shortcut("! help",{prefix:!1,fuzzy:!0}).shortcut("!help",{prefix:!1,fuzzy:!0}).action((async(e,t)=>t?["框框","背景","个签","大括号"].includes(t)?`[CQ:image,file=file://${c.default.resolve(__dirname,"png","help",`help-${t}.png`)}]`:"没有这个帮助的图片哦":`[CQ:image,file=file://${c.default.resolve(__dirname,"png","help","Sayobot help.png")}]`)),e.command("osu.download","?",{hidden:!0}).action((()=>"Welcome to OSU! 点击下载osu客户端\nhttps://dl.sayobot.cn/osu.zip\n点击打开OSU地图镜像站 https://osu.sayobot.cn\n点击在线游玩 http://game.osu.sh")),e.on("message",(async e=>{if(e.content.startsWith("https://osu.ppy.sh/"))return e.send(`点击链接下载此图 https://osu.sayobot.cn/?search=${e.content.split("beatmapsets/")[1].split("#")[0]}`)}))}))}},7088:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return a(t,e),t},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const s=n(2087),c=n(8664),u=i(n(6957)),l=r(n(2470));t.apply=async function(e,t){t.title="Bot::Console",e.plugin(u,t),c.template.set("status",{bot:"{{ username }}：{{ code ? `无法连接` : `工作中（${currentRate[0]}/min）` }}",output:["{{ bots }}","==========","活跃用户数量：{{ activeUsers }}","活跃群数量：{{ activeGroups }}","CPU 使用率：{{ (cpu[0] * 100).toFixed() }}% / {{ (cpu[1] * 100).toFixed() }}%","内存使用率：{{ (memory[0] * 100).toFixed() }}% / {{ (memory[1] * 100).toFixed() }}%"].join("\n")}),e.app.on("connect",(()=>{const t=e.app.database.mongo.collection("message");e.app.webui.sources.meta.extend((async()=>{const n={},o=(await Promise.all(e.app.bots.map((t=>e.app.database.getUser(t.platform,t.selfId.toString()))))).map((e=>null==e?void 0:e.id)).filter((e=>!!e)),a={time:{$gt:l.default().add(-1,"day").toDate()}};return n.activeUsers=await e.app.database.mongo.user.find({}).count(),n.totalSendCount=await t.find({...a,sender:{$in:o.map(parseInt)}}).count(),n.totalReceiveCount=await t.find({...a,sender:{$nin:o.map(parseInt)}}).count(),n.usedmem=Math.floor((s.totalmem()-s.freemem())/1024/1024),n.totalmem=Math.floor(s.totalmem()/1024/1024),n}))}))}},9891:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0,t.apply=function(e){e.command("sudo <command:text>",{hidden:!0,noRedirect:!0}).userFields(["sudoer","authority"]).action((async({session:e},t)=>{if(!e.user.sudoer)throw new Error("You are not in the sudoers file.");const n=e.user.authority;e.user.authority=5,e._sudo=!0,await e.execute(t),e.user.authority=n}))}},475:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return a(t,e),t},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const s=i(n(663)),c=r(n(2376)),u=n(7548),l=/\[CQ:image,file=([^,]+),url=([^\]]+)\]/,d=/\[CQ:image,file=image:\/\/([^,]+)\]/;t.apply=(e,t)=>{const n=e.logger("teach");e.plugin(s,t),e.command("teach",{checkArgCount:!1}),e.on("before-command",(async({session:t,command:n})=>{if(n.getConfig("noRedirect",t)&&t._redirected){const n=await e.app.database.getUser("id",t._dialogue.writer,["authority"]);if(n.authority<5&&!n.sudoer)return"不支持在插值中调用该命令。"}})),e.on("connect",(()=>{const t=e.app.database.mongo.collection("image"),o=async(e,n)=>{if(await t.findOne({_id:e}))return;const{data:o}=await c.default.get(n,{responseType:"arraybuffer"}),a=Buffer.alloc(o.byteLength),i=new Uint8Array(o);for(let e=0;e<a.length;++e)a[e]=i[e];await t.insertOne({_id:e,data:new u.Binary(a)})};e.on("dialogue/detail",(async(e,o)=>{try{for(const e in o){let n,a="";for(;n=d.exec(o[e]);){const[i,r]=n;a+=o[e].slice(0,n.index),o[e]=o[e].slice(n.index+i.length);a+=`[CQ:image,file=base64://${(await t.findOne({_id:r})).data.buffer.toString("base64")}]`}o[e]=a+o[e]}}catch(e){throw n.warn(e.message),new Error("下载图片时发生错误。")}})),e.on("dialogue/before-send",(async e=>{let{answer:o}=e;if(o)try{let n,a="";for(;n=d.exec(o);){const[e,i]=n;a+=o.slice(0,n.index),o=o.slice(n.index+e.length);a+=`[CQ:image,file=base64://${(await t.findOne({_id:i})).data.buffer.toString("base64")}]`}e.answer=a+o}catch(e){throw n.warn(e.message),new Error("下载图片时发生错误。")}})),e.on("dialogue/before-modify",(async({options:e})=>{let{answer:t}=e;if(t)try{let n,a="";for(;n=l.exec(t);){const[e,i,r]=n;a+=t.slice(0,n.index),t=t.slice(n.index+e.length),await o(i,r),a+=`[CQ:image,file=image://${i}]`}e.answer=a+t}catch(e){return n.warn(e.message),"上传图片时发生错误。"}}))}))}},8424:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n),Object.defineProperty(e,o,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return a(t,e),t},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.apply=void 0;const s=r(n(4515)),c=r(n(2376)),u=r(n(742)),l=n(3804),d=i(n(9636)),p=i(n(9509)),f=n(5747),m=n(2519),g=r(n(7286));t.apply=e=>{e.plugin(p,{bilibili:!1,magi:!1,oeis:!1}),e.plugin(d),e.command("search","",{maxUsage:5,minInterval:6e4}),e.command("tools/tex <code:text>","KaTeX 渲染",{minInterval:1e3}).alias("katex <code:text>").action((async({session:e},t)=>{let{data:n}=await c.default.get(`https://www.zhihu.com/equation?tex=${encodeURIComponent(t)}`);const o=n.match(/>([^<]+)<\/text>/);if(o)return e.send(o[1]);const a=n.match(/ viewBox="0 (-?\d*(.\d+)?) -?\d*(.\d+)? -?\d*(.\d+)?" /);a&&(n=n.replace("\n",`\n<rect x="0" y="${a[1]}" width="100%" height="100%" fill="white"></rect>\n`));return`[CQ:image,file=base64://${(await u.default(Buffer.from(n)).png().toBuffer()).toString("base64")}]`})),e.command("tools/ip <ip>","查询ip").action((async(e,t)=>{const n=`http://freeapi.ipip.net/${t}`;return(await s.default.get(n)).body.join(" ")})),e.command("tools/oeis <sequence>","使用 OEIS 进行数列查询",{maxUsage:10}).option("start","-s <start> 设置起始页码",{fallback:0}).usage("输入用逗号隔开的数作为要查询的数列的前几项，或者直接输入以 id:A 打头的数列编号。").example("oeis 1,2,3,6,11,23,47,106,235").example("oeis id:A000055").action((async({options:e,session:t},n)=>{const{body:o}=await s.default.get(`https://oeis.org/search?fmt=json&q=${n}&start=${e.start}`),a=l.filter(o.results,(e=>!e.name.startsWith("Duplicate")));for(const e of l.take(a,3))await t.sendQueued([`https://oeis.org/A${String(e.number).padStart(6,"0")}`,`${e.name}${e.id?` (${e.id})`:""}`,`${l.take(e.data.split(","),10).join(",")}`].join("\n"))})),e.command("tools/pornhub <text1> <text2>","生成PornHub风格Logo").action((async(t,n,o)=>{const a=await e.app.puppeteer.page();await a.goto("https://www.dute.org/pornhub-logo"),await a.evaluate(((e,t)=>{document.getElementsByClassName("pornhub-prefix")[0].innerHTML=e,document.getElementsByClassName("pornhub-postfix")[0].innerHTML=t}),n,o);const i=await a.$(".screenshotable"),r=await i.screenshot({type:"jpeg"});return await a.close(),`[CQ:image,file=base64://${r.toString("base64")}]`})),f.existsSync("/usr/bin/wd")&&e.command("tools/dict <word>","使用无道词典查词").example("dict hello").alias("wd").action((async(t,n)=>{n=n.split("").filter((e=>/[-a-zA-Z0-9]/.test(e))).join("");const o=await g.default(`/usr/bin/wd ${n}`),a=await e.app.puppeteer.page(),i=await m.text2png(a,o);return a.close(),`[CQ:image,file=base64://${i}]`}))}},7558:()=>{},2468:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.apply=void 0;const getFirstPinyin=e=>(e.pinyin.split(/\s+/).shift()||"").replace(/[āáǎà]/g,"a").replace(/[ōóǒò]/g,"o").replace(/[ēéěèê]/g,"e").replace(/[īíǐì]/g,"i").replace(/[ūúǔù]/g,"u").replace(/[ǖǘǚǜü]/g,"v"),getLastPinyin=e=>(e.pinyin.split(/\s+/).pop()||"").replace(/[āáǎà]/g,"a").replace(/[ōóǒò]/g,"o").replace(/[ēéěèê]/g,"e").replace(/[īíǐì]/g,"i").replace(/[ūúǔù]/g,"u").replace(/[ǖǘǚǜü]/g,"v"),fix=e=>("味同嚼蜡"===e.word&&(e.pinyin=e.pinyin.replace("cù","là")),e.word.endsWith("俩")&&(e.pinyin=e.pinyin.replace("liǎng","liǎ")),e.pinyin=e.pinyin.replace(/yi([ēéěèêe])/g,"y$1"),e),indexed=e=>{const t={firstPinyin:{},lastPinyin:{},word:{}};for(const n of e)if(fix(n),4===n.word.length){const e=getLastPinyin(n),o=t.lastPinyin[e]||[];t.lastPinyin[e]=o,o.push(n);const a=getFirstPinyin(n),i=t.firstPinyin[a]||[];t.firstPinyin[a]=i,i.push(n),t.word[n.word]=n}let n=new Set(["yi"]);for(let e=1;n.size>0;++e){const o=new Set;n.forEach((n=>{for(const a of t.lastPinyin[n]||[])a.level||(a.level=e,o.add(getFirstPinyin(a)))})),n=o}return t},db=indexed(eval("require")(`${process.cwd()}/database/yiGeDingLia.json`)),handle=e=>{const t=[];let n=db.word[e];for(;n&&n.level;){const{level:e}=n;if(t.push(n),!(e>1))return t.push({word:"一个顶俩",pinyin:"yī gè dǐng liǎ"}),t;{const t=db.firstPinyin[getLastPinyin(n)].filter((t=>t.level&&t.level<e));n=t[Math.floor(Math.random()*t.length)]}}return t},apply=e=>{e.command("成语接龙 <成语>","成语接龙",{minInterval:1e3,checkArgCount:!1}).action(((e,t)=>{if(!t)return"请输入成语。";const n=handle(t);if(n.length){const e=[];for(const t in n)e.push(n[t].word," ");return e.join("")}}))};exports.apply=apply},5305:(e,t,n)=>{var o={"./arcaea":5138,"./arcaea.tsx":5138,"./autokick":6286,"./autokick.ts":6286,"./bilibili":1298,"./bilibili.ts":1298,"./bottle":2932,"./bottle.ts":2932,"./busybox":4454,"./busybox.ts":4454,"./calc":8342,"./calc.ts":8342,"./codeforces":6134,"./codeforces.ts":6134,"./dress":1916,"./dress.ts":1916,"./economy":5282,"./economy.ts":5282,"./eval":7276,"./eval.ts":7276,"./github":8394,"./github.ts":8394,"./glados":4819,"./glados.ts":4819,"./google":1266,"./google.ts":1266,"./hearthstone":7780,"./hearthstone.ts":7780,"./httpcat":1263,"./httpcat.ts":1263,"./hydro":5452,"./hydro.ts":5452,"./imagetag":5778,"./imagetag.ts":5778,"./jjwz":1925,"./jjwz.ts":1925,"./kabu":2179,"./kabu.ts":2179,"./luogu":1787,"./luogu.ts":1787,"./lxbot":7750,"./lxbot.ts":7750,"./ocr":1078,"./ocr.ts":1078,"./oier":8140,"./oier.ts":8140,"./proxy":5405,"./proxy.ts":5405,"./run":3372,"./run.ts":3372,"./sayo":8260,"./sayo.ts":8260,"./status":7088,"./status.ts":7088,"./sudo":9891,"./sudo.ts":9891,"./teach":475,"./teach.ts":475,"./tools":8424,"./tools.ts":8424,"./wordcloud":7558,"./wordcloud.ts":7558,"./ygdl":2468,"./ygdl.ts":2468};function a(e){var t=i(e);return n(t)}function i(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=5305},2293:e=>{"use strict";e.exports=require("../../.cache/hs_card_enUS.json")},9802:e=>{"use strict";e.exports=require("../../.cache/hs_card_zhCN.json")},1138:e=>{"use strict";e.exports=require("adm-zip")},4768:e=>{"use strict";e.exports=require("ansi_up")},2376:e=>{"use strict";e.exports=require("axios")},3129:e=>{"use strict";e.exports=require("child_process")},6417:e=>{"use strict";e.exports=require("crypto")},124:e=>{"use strict";e.exports=require("ffi-napi")},5747:e=>{"use strict";e.exports=require("fs")},4298:e=>{"use strict";e.exports=require("fs-extra")},2944:e=>{"use strict";e.exports=require("googleapis")},9949:e=>{"use strict";e.exports=require("https-proxy-agent")},6675:e=>{"use strict";e.exports=require("js-yaml")},4630:e=>{"use strict";e.exports=require("jsdom")},451:e=>{"use strict";e.exports=require("koishi-adapter-discord")},8573:e=>{"use strict";e.exports=require("koishi-adapter-onebot")},9711:e=>{"use strict";e.exports=require("koishi-adapter-telegram")},8664:e=>{"use strict";e.exports=require("koishi-core")},4393:e=>{"use strict";e.exports=require("koishi-plugin-common")},9160:e=>{"use strict";e.exports=require("koishi-plugin-eval")},9636:e=>{"use strict";e.exports=require("koishi-plugin-image-search")},9585:e=>{"use strict";e.exports=require("koishi-plugin-mongo")},663:e=>{"use strict";e.exports=require("koishi-plugin-teach")},9509:e=>{"use strict";e.exports=require("koishi-plugin-tools")},6957:e=>{"use strict";e.exports=require("koishi-plugin-webui")},280:e=>{"use strict";e.exports=require("koishi-utils")},3804:e=>{"use strict";e.exports=require("lodash")},2470:e=>{"use strict";e.exports=require("moment")},7548:e=>{"use strict";e.exports=require("mongodb")},2087:e=>{"use strict";e.exports=require("os")},5622:e=>{"use strict";e.exports=require("path")},1765:e=>{"use strict";e.exports=require("process")},9297:e=>{"use strict";e.exports=require("react")},9747:e=>{"use strict";e.exports=require("react-dom/server")},742:e=>{"use strict";e.exports=require("sharp")},4515:e=>{"use strict";e.exports=require("superagent")},3680:e=>{"use strict";e.exports=require("superagent-proxy")},1669:e=>{"use strict";e.exports=require("util")}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.exports}__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var __webpack_exports__=__webpack_require__(9063)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,